# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Automatically generated Makefile.am! Check ./create_makefile.sh

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = caves
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gl.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(Achim_Hofmanndir)" \
	"$(DESTDIR)$(Alan_Bonddir)" "$(DESTDIR)$(Alchemysticsdir)" \
	"$(DESTDIR)$(Alex_Zopdir)" "$(DESTDIR)$(American_Actiondir)" \
	"$(DESTDIR)$(Arno_Weberdir)" "$(DESTDIR)$(Atarakushidir)" \
	"$(DESTDIR)$(Bert_Boggerdir)" "$(DESTDIR)$(Black_and_Hawkdir)" \
	"$(DESTDIR)$(Blupidir)" "$(DESTDIR)$(Bobosoftdir)" \
	"$(DESTDIR)$(Boulder_Dash_Communitydir)" \
	"$(DESTDIR)$(Boulder_Rush_cave_packdir)" \
	"$(DESTDIR)$(Boulderwillidir)" "$(DESTDIR)$(Burton_Banditdir)" \
	"$(DESTDIR)$(CCFdir)" "$(DESTDIR)$(CWSdir)" \
	"$(DESTDIR)$(Chaosdir)" "$(DESTDIR)$(Cheech_Und_Chongsdir)" \
	"$(DESTDIR)$(Conraddir)" \
	"$(DESTDIR)$(CoolshakerUnionGangKGdir)" "$(DESTDIR)$(Cupdir)" \
	"$(DESTDIR)$(Dan_Warrendir)" \
	"$(DESTDIR)$(Daniel_Tavernierdir)" "$(DESTDIR)$(Dididir)" \
	"$(DESTDIR)$(Dinodir)" "$(DESTDIR)$(Don_Pedrodir)" \
	"$(DESTDIR)$(Dotterteamdir)" "$(DESTDIR)$(Dr_Gurudir)" \
	"$(DESTDIR)$(Dr_Watsondir)" "$(DESTDIR)$(Dustin_Bachsteindir)" \
	"$(DESTDIR)$(Eberhard_Baartzdir)" "$(DESTDIR)$(Eclipsdir)" \
	"$(DESTDIR)$(El_Swingidir)" "$(DESTDIR)$(FAJ_Softdir)" \
	"$(DESTDIR)$(Falcon_Softdir)" "$(DESTDIR)$(Firefoxdir)" \
	"$(DESTDIR)$(Frustdir)" "$(DESTDIR)$(Gert_van_den_Heuveldir)" \
	"$(DESTDIR)$(Gertruddir)" "$(DESTDIR)$(Godsdir)" \
	"$(DESTDIR)$(Grant_Walkerdir)" "$(DESTDIR)$(HSGdir)" \
	"$(DESTDIR)$(Hackerdir)" "$(DESTDIR)$(Heinz_Truepelmanndir)" \
	"$(DESTDIR)$(Iron_Softdir)" "$(DESTDIR)$(Karlchen_Opossumdir)" \
	"$(DESTDIR)$(LTL_Softdir)" \
	"$(DESTDIR)$(Lanzelott_and_Matuladir)" \
	"$(DESTDIR)$(Lord_Diegodir)" "$(DESTDIR)$(Lukas_Shambisdir)" \
	"$(DESTDIR)$(MB_Softdir)" "$(DESTDIR)$(MJMandir)" \
	"$(DESTDIR)$(MJRdir)" "$(DESTDIR)$(Madgamedir)" \
	"$(DESTDIR)$(Mapasoftdir)" "$(DESTDIR)$(Marek_Rothdir)" \
	"$(DESTDIR)$(Mario_Albrechtdir)" \
	"$(DESTDIR)$(Matthias_Kothdir)" \
	"$(DESTDIR)$(Matthias_Steinerdir)" "$(DESTDIR)$(Maxdir)" \
	"$(DESTDIR)$(Metalmorphosisdir)" \
	"$(DESTDIR)$(Michael_and_Ingodir)" "$(DESTDIR)$(MrJokerdir)" \
	"$(DESTDIR)$(MrNobodydir)" "$(DESTDIR)$(MrNonflexdir)" \
	"$(DESTDIR)$(MrRockforddir)" "$(DESTDIR)$(NO1dir)" \
	"$(DESTDIR)$(NO1_delightdir)" "$(DESTDIR)$(NO1_primadir)" \
	"$(DESTDIR)$(Ododir)" "$(DESTDIR)$(Olaf_Rothdir)" \
	"$(DESTDIR)$(Oriondir)" "$(DESTDIR)$(Papisdir)" \
	"$(DESTDIR)$(Persoftdir)" "$(DESTDIR)$(Petedir)" \
	"$(DESTDIR)$(Peter_Liepadir)" "$(DESTDIR)$(Peter_Tdir)" \
	"$(DESTDIR)$(Phoenixdir)" "$(DESTDIR)$(Pierre_and_Olivierdir)" \
	"$(DESTDIR)$(Posocopi_Waldkirchdir)" \
	"$(DESTDIR)$(Prof_Knibbledir)" \
	"$(DESTDIR)$(Profi_Boulder_disksdir)" "$(DESTDIR)$(Renatedir)" \
	"$(DESTDIR)$(Rolf_Langedir)" "$(DESTDIR)$(Rolf_Rothdir)" \
	"$(DESTDIR)$(Ron_van_Schaikdir)" "$(DESTDIR)$(Rory_Agstendir)" \
	"$(DESTDIR)$(Schlonkeldir)" "$(DESTDIR)$(Scserbin_Zoltandir)" \
	"$(DESTDIR)$(Sendydir)" "$(DESTDIR)$(Skeletordir)" \
	"$(DESTDIR)$(Spiderdir)" "$(DESTDIR)$(Stormbringerdir)" \
	"$(DESTDIR)$(Sub7dir)" "$(DESTDIR)$(Subotaidir)" \
	"$(DESTDIR)$(Super_boulderdir)" \
	"$(DESTDIR)$(Tatter_Demaliondir)" \
	"$(DESTDIR)$(The_Blockheadsdir)" \
	"$(DESTDIR)$(The_Bremer_Town_Musicusdir)" \
	"$(DESTDIR)$(The_Editordir)" "$(DESTDIR)$(The_Softkillerdir)" \
	"$(DESTDIR)$(Thomas_Mauritzdir)" "$(DESTDIR)$(Tropyxdir)" \
	"$(DESTDIR)$(UnlimitedStar23dir)" "$(DESTDIR)$(Witrodir)" \
	"$(DESTDIR)$(variousdir)"
DATA = $(Achim_Hofmann_DATA) $(Alan_Bond_DATA) $(Alchemystics_DATA) \
	$(Alex_Zop_DATA) $(American_Action_DATA) $(Arno_Weber_DATA) \
	$(Atarakushi_DATA) $(Bert_Bogger_DATA) $(Black_and_Hawk_DATA) \
	$(Blupi_DATA) $(Bobosoft_DATA) $(Boulder_Dash_Community_DATA) \
	$(Boulder_Rush_cave_pack_DATA) $(Boulderwilli_DATA) \
	$(Burton_Bandit_DATA) $(CCF_DATA) $(CWS_DATA) $(Chaos_DATA) \
	$(Cheech_Und_Chongs_DATA) $(Conrad_DATA) \
	$(CoolshakerUnionGangKG_DATA) $(Cup_DATA) $(Dan_Warren_DATA) \
	$(Daniel_Tavernier_DATA) $(Didi_DATA) $(Dino_DATA) \
	$(Don_Pedro_DATA) $(Dotterteam_DATA) $(Dr_Guru_DATA) \
	$(Dr_Watson_DATA) $(Dustin_Bachstein_DATA) \
	$(Eberhard_Baartz_DATA) $(Eclips_DATA) $(El_Swingi_DATA) \
	$(FAJ_Soft_DATA) $(Falcon_Soft_DATA) $(Firefox_DATA) \
	$(Frust_DATA) $(Gert_van_den_Heuvel_DATA) $(Gertrud_DATA) \
	$(Gods_DATA) $(Grant_Walker_DATA) $(HSG_DATA) $(Hacker_DATA) \
	$(Heinz_Truepelmann_DATA) $(Iron_Soft_DATA) \
	$(Karlchen_Opossum_DATA) $(LTL_Soft_DATA) \
	$(Lanzelott_and_Matula_DATA) $(Lord_Diego_DATA) \
	$(Lukas_Shambis_DATA) $(MB_Soft_DATA) $(MJMan_DATA) \
	$(MJR_DATA) $(Madgame_DATA) $(Mapasoft_DATA) \
	$(Marek_Roth_DATA) $(Mario_Albrecht_DATA) \
	$(Matthias_Koth_DATA) $(Matthias_Steiner_DATA) $(Max_DATA) \
	$(Metalmorphosis_DATA) $(Michael_and_Ingo_DATA) \
	$(MrJoker_DATA) $(MrNobody_DATA) $(MrNonflex_DATA) \
	$(MrRockford_DATA) $(NO1_DATA) $(NO1_delight_DATA) \
	$(NO1_prima_DATA) $(Odo_DATA) $(Olaf_Roth_DATA) $(Orion_DATA) \
	$(Papis_DATA) $(Persoft_DATA) $(Pete_DATA) $(Peter_Liepa_DATA) \
	$(Peter_T_DATA) $(Phoenix_DATA) $(Pierre_and_Olivier_DATA) \
	$(Posocopi_Waldkirch_DATA) $(Prof_Knibble_DATA) \
	$(Profi_Boulder_disks_DATA) $(Renate_DATA) $(Rolf_Lange_DATA) \
	$(Rolf_Roth_DATA) $(Ron_van_Schaik_DATA) $(Rory_Agsten_DATA) \
	$(Schlonkel_DATA) $(Scserbin_Zoltan_DATA) $(Sendy_DATA) \
	$(Skeletor_DATA) $(Spider_DATA) $(Stormbringer_DATA) \
	$(Sub7_DATA) $(Subotai_DATA) $(Super_boulder_DATA) \
	$(Tatter_Demalion_DATA) $(The_Blockheads_DATA) \
	$(The_Bremer_Town_Musicus_DATA) $(The_Editor_DATA) \
	$(The_Softkiller_DATA) $(Thomas_Mauritz_DATA) $(Tropyx_DATA) \
	$(UnlimitedStar23_DATA) $(Witro_DATA) $(various_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBPNG_CFLAGS = @LIBPNG_CFLAGS@
LIBPNG_LIBS = @LIBPNG_LIBS@
LIBS = @LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
MSGMERGE_FOR_MSGFMT_OPTION = @MSGMERGE_FOR_MSGFMT_OPTION@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
SDL2_CONFIG = @SDL2_CONFIG@
SDL2_FRAMEWORK = @SDL2_FRAMEWORK@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_LIBS = @SDL_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XMKMF = @XMKMF@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
Achim_Hofmanndir = $(pkgdatadir)/caves/Achim_Hofmann
Achim_Hofmann_CAVES = Achim_Hofmann/Achim_Hofmann.gds
Achim_Hofmann_DATA = $(Achim_Hofmann_CAVES)
Alan_Bonddir = $(pkgdatadir)/caves/Alan_Bond
Alan_Bond_CAVES = Alan_Bond/Boulder_Brain.gds
Alan_Bond_DATA = $(Alan_Bond_CAVES)
Alchemysticsdir = $(pkgdatadir)/caves/Alchemystics
Alchemystics_CAVES = Alchemystics/Alchemyst_Dangerdash_1.bd Alchemystics/Alchemyst_Dig_1.bd Alchemystics/Alchemyst_Dig_2.bd Alchemystics/Alchemyst_Dig_3.bd Alchemystics/Alchemyst_Dig_4.bd Alchemystics/Alchemyst_Dig_5.bd
Alchemystics_DATA = $(Alchemystics_CAVES)
Alex_Zopdir = $(pkgdatadir)/caves/Alex_Zop
Alex_Zop_CAVES = Alex_Zop/Alex_Zop.gds Alex_Zop/Nahost_91.gds Alex_Zop/Rockford_in_Nimmerland_2.gds Alex_Zop/Rockirockano01.gds
Alex_Zop_DATA = $(Alex_Zop_CAVES)
American_Actiondir = $(pkgdatadir)/caves/American_Action
American_Action_CAVES = American_Action/Boulder_Dash_3.bd
American_Action_DATA = $(American_Action_CAVES)
Arno_Weberdir = $(pkgdatadir)/caves/Arno_Weber
Arno_Weber_CAVES = Arno_Weber/Arno_Dash_01.bd Arno_Weber/Arno_Dash_02.bd Arno_Weber/Arno_Dash_03.bd Arno_Weber/Arno_Dash_04.bd Arno_Weber/Arno_Dash_05.bd Arno_Weber/Arno_Dash_06.bd Arno_Weber/Arno_Dash_07.bd Arno_Weber/Arno_Dash_08.bd Arno_Weber/Arno_Dash_09.bd Arno_Weber/Arno_Dash_10.bd Arno_Weber/Arno_Dash_11.bd Arno_Weber/Arno_Dash_12.bd Arno_Weber/Arno_Dash_13.bd Arno_Weber/Arno_Dash_14.bd Arno_Weber/Arno_Dash_15.bd Arno_Weber/Arno_Dash_16.bd Arno_Weber/Arno_Dash_17.bd Arno_Weber/Arno_Dash_18.bd Arno_Weber/Arno_Dash_19.bd Arno_Weber/Arno_Dash_20.bd Arno_Weber/Arno_Dash_21.bd Arno_Weber/Exploding_Dash.bd Arno_Weber/Exploding_Dash_II.bd Arno_Weber/Future_Dash.bd Arno_Weber/Santas_Bd_Party.bd
Arno_Weber_DATA = $(Arno_Weber_CAVES)
Atarakushidir = $(pkgdatadir)/caves/Atarakushi
Atarakushi_CAVES = Atarakushi/Ataraxy_Dash_001.bd
Atarakushi_DATA = $(Atarakushi_CAVES)
Bert_Boggerdir = $(pkgdatadir)/caves/Bert_Bogger
Bert_Bogger_CAVES = Bert_Bogger/Boulder_Dash_Pro_1995.gds Bert_Bogger/Boulder_Dash_Pro_2.gds
Bert_Bogger_DATA = $(Bert_Bogger_CAVES)
Black_and_Hawkdir = $(pkgdatadir)/caves/Black_and_Hawk
Black_and_Hawk_CAVES = Black_and_Hawk/Angels_Boulder_1.gds Black_and_Hawk/Angels_Boulder_2.gds
Black_and_Hawk_DATA = $(Black_and_Hawk_CAVES)
Blupidir = $(pkgdatadir)/caves/Blupi
Blupi_CAVES = Blupi/Blue_Wonder.gds
Blupi_DATA = $(Blupi_CAVES)
Bobosoftdir = $(pkgdatadir)/caves/Bobosoft
Bobosoft_CAVES = Bobosoft/Bobo1_Atari.bd Bobosoft/Bobo3_Atari.bd Bobosoft/Bobo4_Atari.bd
Bobosoft_DATA = $(Bobosoft_CAVES)
Boulderwillidir = $(pkgdatadir)/caves/Boulderwilli
Boulderwilli_CAVES = Boulderwilli/Babydash.gds Boulderwilli/Blue_Diamonds.gds Boulderwilli/Children_1.gds Boulderwilli/Marathon_Dash_Part_1.gds Boulderwilli/Marathon_Dash_Part_2.gds Boulderwilli/Marathon_Dash_Part_3.gds Boulderwilli/Marathon_Dash_Part_4.gds Boulderwilli/Marathon_Dash_Part_5.gds Boulderwilli/Midnight_Dash.gds Boulderwilli/Moonlight_2.gds Boulderwilli/Moonlight_3.gds
Boulderwilli_DATA = $(Boulderwilli_CAVES)
Boulder_Dash_Communitydir = $(pkgdatadir)/caves/Boulder_Dash_Community
Boulder_Dash_Community_CAVES = Boulder_Dash_Community/Xmas_Boulder_Dash_2001.gds
Boulder_Dash_Community_DATA = $(Boulder_Dash_Community_CAVES)
Boulder_Rush_cave_packdir = $(pkgdatadir)/caves/Boulder_Rush_cave_pack
Boulder_Rush_cave_pack_CAVES = Boulder_Rush_cave_pack/Gods.gds Boulder_Rush_cave_pack/Miscellaneous.gds Boulder_Rush_cave_pack/Peter_Broadribb.gds Boulder_Rush_cave_pack/Stefan_Schneider.gds Boulder_Rush_cave_pack/Swedish.gds Boulder_Rush_cave_pack/Thomas_Richter.gds Boulder_Rush_cave_pack/Tobias_Pfaff.gds Boulder_Rush_cave_pack/Uwe_Drichel.gds Boulder_Rush_cave_pack/Wilhelm_Oelinger.gds
Boulder_Rush_cave_pack_DATA = $(Boulder_Rush_cave_pack_CAVES)
Burton_Banditdir = $(pkgdatadir)/caves/Burton_Bandit
Burton_Bandit_CAVES = Burton_Bandit/Bandit01.gds \
	Burton_Bandit/Bandit02.gds Burton_Bandit/Bandit03.gds \
	Burton_Bandit/Bandit04_Olympic1.gds \
	Burton_Bandit/Bandit05_Olympic2.gds \
	Burton_Bandit/Bandit06_Shorty1.gds \
	Burton_Bandit/Bandit07_Budge.gds \
	Burton_Bandit/Bandit08_Lightnin.gds \
	Burton_Bandit/Bandit09_Frenzy1.gds \
	Burton_Bandit/Bandit10_Torpedo1.gds \
	Burton_Bandit/Bandit11_Torpedo2.gds \
	Burton_Bandit/Bandit12_Born_Free.gds \
	Burton_Bandit/Bandit13_Life_Trials.gds \
	Burton_Bandit/Bandit14_Journey_Onwards.gds \
	Burton_Bandit/Bandit15_Lions_Pride.gds \
	Burton_Bandit/Bandit16_Life_Trials_2.gds \
	Burton_Bandit/Bandit17_Maniac_Mob.gds \
	Burton_Bandit/Bandit18_New_Sights.gds \
	Burton_Bandit/Bandit19_Satisfying.gds \
	Burton_Bandit/Bandit20_Revenge_Of_Tomo.gds \
	Burton_Bandit/Bandit21_Drvesty1.gds \
	Burton_Bandit/Bandit22_Kiddies1.gds \
	Burton_Bandit/Bandit23_Steve1.gds \
	Burton_Bandit/Bandit24_Steve2.gds \
	Burton_Bandit/Bandit25_Steve3.gds \
	Burton_Bandit/Bandit26_Steve4.gds \
	Burton_Bandit/Bandit27_Steve5.gds \
	Burton_Bandit/Bandit28_Steve6.gds \
	Burton_Bandit/Bandit29_Richy1.gds \
	Burton_Bandit/Bandit30_Richy2.gds \
	Burton_Bandit/Bandit31_Richy3.gds \
	Burton_Bandit/Bandit32_New_Recruits.gds \
	Burton_Bandit/Bandit33_Amazeing.gds \
	Burton_Bandit/Bandit34_Majic_Muchrooms.gds \
	Burton_Bandit/Bandit35_Torque.gds \
	Burton_Bandit/Bandit36_Green_Fingers.gds \
	Burton_Bandit/Bandit37_Lord_Rockford.gds \
	Burton_Bandit/Bandit38_Bits_N_Pieces.gds \
	Burton_Bandit/Bandit39_Who_Dares___.gds \
	Burton_Bandit/Bandit40_Frenzy2.gds \
	Burton_Bandit/Bandit41_Robber.gds \
	Burton_Bandit/Bandit42_Dash1.gds \
	Burton_Bandit/Bandit43_Stromo1.gds \
	Burton_Bandit/Bandit44_Brothers1.gds \
	Burton_Bandit/Bandit45_Brothers2.gds \
	Burton_Bandit/Bandit46_Lightnin2.gds \
	Burton_Bandit/Bandit47_Shorty2.gds \
	Burton_Bandit/Bandit48_Melhell1.gds \
	Burton_Bandit/Bandit49_Numbers1.gds \
	Burton_Bandit/Bandit50_Numbers2.gds \
	Burton_Bandit/Bandit51_Life_Or_Death.gds \
	Burton_Bandit/Bandit52_Paranoid.gds \
	Burton_Bandit/Bandit53_It_S_A_Rap.gds \
	Burton_Bandit/Bandit54_Legs_Onwards.gds
Burton_Bandit_DATA = $(Burton_Bandit_CAVES)
CCFdir = $(pkgdatadir)/caves/CCF
CCF_CAVES = CCF/Pac_Boulder.gds CCF/Trap_Boulder_1.gds CCF/Trap_Boulder_3.gds CCF/Trap_Boulder_4.gds
CCF_DATA = $(CCF_CAVES)
Chaosdir = $(pkgdatadir)/caves/Chaos
Chaos_CAVES = Chaos/Super_Boulder_Dash_1.gds
Chaos_DATA = $(Chaos_CAVES)
Cheech_Und_Chongsdir = $(pkgdatadir)/caves/Cheech_Und_Chongs
Cheech_Und_Chongs_CAVES = Cheech_Und_Chongs/Cheech_Und_Chongs_Boulder_1.gds Cheech_Und_Chongs/Cheech_Und_Chongs_Boulder_2.gds
Cheech_Und_Chongs_DATA = $(Cheech_Und_Chongs_CAVES)
Conraddir = $(pkgdatadir)/caves/Conrad
Conrad_CAVES = Conrad/Conrad_Dash.gds
Conrad_DATA = $(Conrad_CAVES)
CoolshakerUnionGangKGdir = $(pkgdatadir)/caves/CoolshakerUnionGangKG
CoolshakerUnionGangKG_CAVES = CoolshakerUnionGangKG/Crazy_Dash_1.gds \
	CoolshakerUnionGangKG/Quolder_Dash_1.gds \
	CoolshakerUnionGangKG/Quolder_Dash_10.gds \
	CoolshakerUnionGangKG/Quolder_Dash_11.gds \
	CoolshakerUnionGangKG/Quolder_Dash_12.gds \
	CoolshakerUnionGangKG/Quolder_Dash_13.gds \
	CoolshakerUnionGangKG/Quolder_Dash_14.gds \
	CoolshakerUnionGangKG/Quolder_Dash_15.gds \
	CoolshakerUnionGangKG/Quolder_Dash_15_Fixed.gds \
	CoolshakerUnionGangKG/Quolder_Dash_16.gds \
	CoolshakerUnionGangKG/Quolder_Dash_16_Fixed.gds \
	CoolshakerUnionGangKG/Quolder_Dash_17.gds \
	CoolshakerUnionGangKG/Quolder_Dash_18.gds \
	CoolshakerUnionGangKG/Quolder_Dash_19.gds \
	CoolshakerUnionGangKG/Quolder_Dash_2.gds \
	CoolshakerUnionGangKG/Quolder_Dash_20.gds \
	CoolshakerUnionGangKG/Quolder_Dash_21.gds \
	CoolshakerUnionGangKG/Quolder_Dash_22.gds \
	CoolshakerUnionGangKG/Quolder_Dash_23.gds \
	CoolshakerUnionGangKG/Quolder_Dash_24.gds \
	CoolshakerUnionGangKG/Quolder_Dash_25.gds \
	CoolshakerUnionGangKG/Quolder_Dash_25_Fixed.gds \
	CoolshakerUnionGangKG/Quolder_Dash_26.gds \
	CoolshakerUnionGangKG/Quolder_Dash_27.gds \
	CoolshakerUnionGangKG/Quolder_Dash_28.gds \
	CoolshakerUnionGangKG/Quolder_Dash_29.gds \
	CoolshakerUnionGangKG/Quolder_Dash_3.gds \
	CoolshakerUnionGangKG/Quolder_Dash_30.gds \
	CoolshakerUnionGangKG/Quolder_Dash_31.gds \
	CoolshakerUnionGangKG/Quolder_Dash_4.gds \
	CoolshakerUnionGangKG/Quolder_Dash_5.gds \
	CoolshakerUnionGangKG/Quolder_Dash_6.gds \
	CoolshakerUnionGangKG/Quolder_Dash_7.gds \
	CoolshakerUnionGangKG/Quolder_Dash_8.gds \
	CoolshakerUnionGangKG/Quolder_Dash_9.gds \
	CoolshakerUnionGangKG/Roulder_Dash_1.gds \
	CoolshakerUnionGangKG/Roulder_Dash_2.gds \
	CoolshakerUnionGangKG/Roulder_Dash_3.gds
CoolshakerUnionGangKG_DATA = $(CoolshakerUnionGangKG_CAVES)
Cupdir = $(pkgdatadir)/caves/Cup
Cup_CAVES = Cup/Cup_Dash_4.gds
Cup_DATA = $(Cup_CAVES)
CWSdir = $(pkgdatadir)/caves/CWS
CWS_CAVES = CWS/CWS_Boulder.gds CWS/CWS_Boulder_2.bd
CWS_DATA = $(CWS_CAVES)
Daniel_Tavernierdir = $(pkgdatadir)/caves/Daniel_Tavernier
Daniel_Tavernier_CAVES = Daniel_Tavernier/Blunty_Boulder_Take_II.gds Daniel_Tavernier/Boulderdan_Comeback_I.gds Daniel_Tavernier/Boulderdan_Diam_1.gds Daniel_Tavernier/Boulder_Dan_1.gds Daniel_Tavernier/Boulder_Dan_2.gds Daniel_Tavernier/Diam_1.gds Daniel_Tavernier/Doughtydan_Remix.gds Daniel_Tavernier/Kinder-profi_Boulderdan.gds Daniel_Tavernier/Kinderdan_II.gds Daniel_Tavernier/Kinderdan_Part_II.gds Daniel_Tavernier/Professional_Boulderdan.gds Daniel_Tavernier/Professional_Boulderdan_2.gds
Daniel_Tavernier_DATA = $(Daniel_Tavernier_CAVES)
Dan_Warrendir = $(pkgdatadir)/caves/Dan_Warren
Dan_Warren_CAVES = Dan_Warren/Evil_Spiral.gds
Dan_Warren_DATA = $(Dan_Warren_CAVES)
Dididir = $(pkgdatadir)/caves/Didi
Didi_CAVES = Didi/Dididash_1.gds Didi/Dididash_2.gds
Didi_DATA = $(Didi_CAVES)
Dinodir = $(pkgdatadir)/caves/Dino
Dino_CAVES = Dino/Water_Dash_01.gds Dino/Water_Dash_02.gds Dino/Water_Dash_03.gds Dino/Water_Dash_04.gds Dino/Water_Dash_05.gds Dino/Water_Eat_1.gds
Dino_DATA = $(Dino_CAVES)
Don_Pedrodir = $(pkgdatadir)/caves/Don_Pedro
Don_Pedro_CAVES = Don_Pedro/Don_Pedro_10.gds Don_Pedro/Don_Pedro_11.gds Don_Pedro/Don_Pedro_5.gds Don_Pedro/Don_Pedro_6.gds Don_Pedro/Don_Pedro_7.gds Don_Pedro/Don_Pedro_8.gds Don_Pedro/Don_Pedro_9.gds Don_Pedro/Masters_Boulder_Dash.gds
Don_Pedro_DATA = $(Don_Pedro_CAVES)
Dotterteamdir = $(pkgdatadir)/caves/Dotterteam
Dotterteam_CAVES = Dotterteam/Dotter_Dash_06.gds Dotterteam/Dotter_Dash_07_Atari.bd
Dotterteam_DATA = $(Dotterteam_CAVES)
Dr_Gurudir = $(pkgdatadir)/caves/Dr_Guru
Dr_Guru_CAVES = Dr_Guru/Brain_Delicacy.gds
Dr_Guru_DATA = $(Dr_Guru_CAVES)
Dr_Watsondir = $(pkgdatadir)/caves/Dr_Watson
Dr_Watson_CAVES = Dr_Watson/Dr_Watson_4.gds Dr_Watson/Dr_Watson_4_No_One_Version.gds
Dr_Watson_DATA = $(Dr_Watson_CAVES)
Dustin_Bachsteindir = $(pkgdatadir)/caves/Dustin_Bachstein
Dustin_Bachstein_CAVES = Dustin_Bachstein/BD1_Challenges.bd \
	Dustin_Bachstein/BD2_Challenges.bd \
	Dustin_Bachstein/BD3_Challenges.bd \
	Dustin_Bachstein/Boulder_Dash-The_Expert_Levels.bd \
	Dustin_Bachstein/Boulder_Dash_2-The_Expert_Levels.bd \
	Dustin_Bachstein/Boulder_Dash_Alphabet.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_1.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_10.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_11.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_12.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_13.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_14.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_15_-_Expert_Remix.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_16_-_No1_Remix.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_17.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_18.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_19_-_Darkst00rm_Remix.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_2.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_20.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_21.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_3.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_4.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_5.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_6.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_7.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_8.bd \
	Dustin_Bachstein/Dustin_s_Boulder_Dash_9.bd \
	Dustin_Bachstein/Rockford_s_Tale.bd \
	Dustin_Bachstein/Rock_Fort_1.brc \
	Dustin_Bachstein/Rock_Fort_1_-_The_Long_Way.bd \
	Dustin_Bachstein/Rock_Fort_2.brc \
	Dustin_Bachstein/Rock_Fort_2_-_Inside_The_Fort.bd \
	Dustin_Bachstein/Rock_Fort_3_-_Rockford_s_Dream.bd \
	Dustin_Bachstein/Stage_Game.bd \
	Dustin_Bachstein/What_Rockford_Left_Behind.bd
Dustin_Bachstein_DATA = $(Dustin_Bachstein_CAVES)
Eberhard_Baartzdir = $(pkgdatadir)/caves/Eberhard_Baartz
Eberhard_Baartz_CAVES = Eberhard_Baartz/Boulder_Baartz_1.gds
Eberhard_Baartz_DATA = $(Eberhard_Baartz_CAVES)
Eclipsdir = $(pkgdatadir)/caves/Eclips
Eclips_CAVES = Eclips/Eclips_Dash_Part_B.gds
Eclips_DATA = $(Eclips_CAVES)
El_Swingidir = $(pkgdatadir)/caves/El_Swingi
El_Swingi_CAVES = El_Swingi/Null_Block_Boulder_Dash.gds
El_Swingi_DATA = $(El_Swingi_CAVES)
FAJ_Softdir = $(pkgdatadir)/caves/FAJ_Soft
FAJ_Soft_CAVES = FAJ_Soft/Boulder_Dash_12.gds
FAJ_Soft_DATA = $(FAJ_Soft_CAVES)
Falcon_Softdir = $(pkgdatadir)/caves/Falcon_Soft
Falcon_Soft_CAVES = Falcon_Soft/Falcon_Dash-the_Big_Diamond.gds Falcon_Soft/Falcon_Dash-the_Dark_Cave.gds Falcon_Soft/Falcon_Dash-the_Legend_Continues.gds
Falcon_Soft_DATA = $(Falcon_Soft_CAVES)
Firefoxdir = $(pkgdatadir)/caves/Firefox
Firefox_CAVES = Firefox/Firefox_01.gds Firefox/Firefox_02.gds \
	Firefox/Firefox_03.gds Firefox/Firefox_04.gds \
	Firefox/Firefox_05.gds Firefox/Firefox_06.gds \
	Firefox/Firefox_07.gds Firefox/Firefox_08.gds \
	Firefox/Firefox_09.gds Firefox/Firefox_10.gds \
	Firefox/Firefox_11.gds Firefox/Firefox_12.gds \
	Firefox/Firefox_13.gds Firefox/Firefox_14.gds \
	Firefox/Firefox_15.gds Firefox/Firefox_16.gds \
	Firefox/Firefox_17.gds Firefox/Firefox_18.gds \
	Firefox/Firefox_19.gds Firefox/Firefox_20.gds \
	Firefox/Firefox_21.gds Firefox/Firefox_22.gds \
	Firefox/Firefox_23.gds Firefox/Firefox_24.gds \
	Firefox/Firefox_25.gds Firefox/Firefox_26.gds \
	Firefox/Firefox_27.gds Firefox/Firefox_28.gds \
	Firefox/Firefox_29.gds Firefox/Firefox_30.gds \
	Firefox/Firefox_31.gds Firefox/Firefox_32.gds \
	Firefox/Firefox_33.gds Firefox/Firefox_34.gds \
	Firefox/Firefox_35.gds Firefox/Firefox_36.gds \
	Firefox/Firefox_37.gds Firefox/Firefox_38.gds \
	Firefox/Firefox_39.gds Firefox/Firefox_40.gds \
	Firefox/Firefox_41.gds Firefox/Firefox_42.gds \
	Firefox/Firefox_43.gds Firefox/Firefox_44.gds \
	Firefox/Firefox_45.gds Firefox/Firefox_46.gds \
	Firefox/Firefox_47.gds Firefox/Firefox_48.gds \
	Firefox/Firefox_49.gds Firefox/Firefox_50.gds \
	Firefox/Firefox_51.gds Firefox/Firefox_52.gds \
	Firefox/Firefox_53.gds Firefox/Firefox_54.gds \
	Firefox/Firefox_55.gds Firefox/Firefox_56.gds \
	Firefox/Ghost_Dash.gds
Firefox_DATA = $(Firefox_CAVES)
Frustdir = $(pkgdatadir)/caves/Frust
Frust_CAVES = Frust/Frusti_Dash.gds
Frust_DATA = $(Frust_CAVES)
Gertruddir = $(pkgdatadir)/caves/Gertrud
Gertrud_CAVES = Gertrud/Gertrud_S_Game_A.gds Gertrud/Gertrud_S_Game_B.gds Gertrud/Gertrud_S_Game_C.gds Gertrud/Gertrud_S_Game_D.gds Gertrud/Gertrud_S_Game_E.gds Gertrud/Gertrud_S_Game_F.gds Gertrud/Gertrud_S_Game_G.gds Gertrud/Gertrud_S_Game_H.gds Gertrud/Rodex_I.gds Gertrud/Rodex_II.gds Gertrud/Rodex_III.gds Gertrud/Rodex_IV.gds Gertrud/Rodex_V.gds
Gertrud_DATA = $(Gertrud_CAVES)
Gert_van_den_Heuveldir = $(pkgdatadir)/caves/Gert_van_den_Heuvel
Gert_van_den_Heuvel_CAVES = Gert_van_den_Heuvel/Hill_Dash_01.gds
Gert_van_den_Heuvel_DATA = $(Gert_van_den_Heuvel_CAVES)
Godsdir = $(pkgdatadir)/caves/Gods
Gods_CAVES = Gods/Gods_Boulderdash.gds Gods/Gods_Boulderdash_II.gds Gods/Gods_Boulderdash_III.gds Gods/Gods_Boulderdash_IV.gds Gods/Gods_Boulderdash_IX.gds Gods/Gods_Boulderdash_V.gds Gods/Gods_Boulderdash_VI.gds Gods/Gods_Boulderdash_VII.gds Gods/Gods_Boulderdash_VIII.gds
Gods_DATA = $(Gods_CAVES)
Grant_Walkerdir = $(pkgdatadir)/caves/Grant_Walker
Grant_Walker_CAVES = Grant_Walker/Rockford_s_Revenge.gds
Grant_Walker_DATA = $(Grant_Walker_CAVES)
Hackerdir = $(pkgdatadir)/caves/Hacker
Hacker_CAVES = Hacker/Boulder_Dash_8.gds
Hacker_DATA = $(Hacker_CAVES)
Heinz_Truepelmanndir = $(pkgdatadir)/caves/Heinz_Truepelmann
Heinz_Truepelmann_CAVES = Heinz_Truepelmann/Tatta_01.gds Heinz_Truepelmann/Tatta_02.gds Heinz_Truepelmann/Tatta_03.gds Heinz_Truepelmann/Tatta_04.gds Heinz_Truepelmann/Tatta_05.gds Heinz_Truepelmann/Tatta_06.gds
Heinz_Truepelmann_DATA = $(Heinz_Truepelmann_CAVES)
HSGdir = $(pkgdatadir)/caves/HSG
HSG_CAVES = HSG/GMichel_Dash.gds HSG/Hooligan_Dash_01.gds HSG/Hooligan_Dash_03.gds
HSG_DATA = $(HSG_CAVES)
Iron_Softdir = $(pkgdatadir)/caves/Iron_Soft
Iron_Soft_CAVES = Iron_Soft/Iron_Soft_1_Atari.gds Iron_Soft/Iron_Soft_2_Atari.gds Iron_Soft/Iron_Soft_3_Atari.gds Iron_Soft/Iron_Soft_4_Atari.gds
Iron_Soft_DATA = $(Iron_Soft_CAVES)
Karlchen_Opossumdir = $(pkgdatadir)/caves/Karlchen_Opossum
Karlchen_Opossum_CAVES = Karlchen_Opossum/Frettchen_Dash_01.gds Karlchen_Opossum/Frettchen_Dash_02.gds Karlchen_Opossum/Frettchen_Dash_03.gds Karlchen_Opossum/Frettchen_Dash_04.gds Karlchen_Opossum/Frettchen_Dash_05.gds Karlchen_Opossum/Frettchen_Dash_06.gds Karlchen_Opossum/Frettchen_Dash_07.gds Karlchen_Opossum/Frettchen_Dash_08.gds Karlchen_Opossum/Frettchen_Dash_16.gds Karlchen_Opossum/Frettchen_Dash_17.gds Karlchen_Opossum/Frettchen_Dash_18.gds Karlchen_Opossum/Frettchen_Dash_19.gds Karlchen_Opossum/Frettchen_Dash_21.gds Karlchen_Opossum/Frettchen_Dash_22.gds Karlchen_Opossum/Melmac_Dash_1.gds Karlchen_Opossum/Melmac_Dash_2.gds Karlchen_Opossum/Melmac_Dash_3.gds Karlchen_Opossum/Ossi_Dash_1.gds Karlchen_Opossum/Ossi_Dash_2.gds
Karlchen_Opossum_DATA = $(Karlchen_Opossum_CAVES)
Lanzelott_and_Matuladir = $(pkgdatadir)/caves/Lanzelott_and_Matula
Lanzelott_and_Matula_CAVES = Lanzelott_and_Matula/Fraggle_Dash_I.gds
Lanzelott_and_Matula_DATA = $(Lanzelott_and_Matula_CAVES)
Lord_Diegodir = $(pkgdatadir)/caves/Lord_Diego
Lord_Diego_CAVES = Lord_Diego/Diego_Dash-01.gds Lord_Diego/Diego_Dash-02.gds Lord_Diego/Diego_Dash-03.gds Lord_Diego/Diego_Dash-04.gds Lord_Diego/Diego_Dash-05.gds Lord_Diego/Diego_Dash-06.gds Lord_Diego/Diego_Dash-07.gds Lord_Diego/Diego_Dash-08.gds Lord_Diego/Diego_Dash-09.gds Lord_Diego/Diego_Dash-10.gds Lord_Diego/Diego_Dash-11.gds Lord_Diego/Diego_Dash-12.gds Lord_Diego/Diego_Dash-13.gds Lord_Diego/Diego_Dash-14.gds Lord_Diego/Diego_Dash-15.gds Lord_Diego/Diego_Dash-16.gds Lord_Diego/Diego_Dash-17.gds Lord_Diego/Diego_Dash-18.gds Lord_Diego/Diego_Dash-19.gds Lord_Diego/Diego_Dash-23.gds
Lord_Diego_DATA = $(Lord_Diego_CAVES)
LTL_Softdir = $(pkgdatadir)/caves/LTL_Soft
LTL_Soft_CAVES = LTL_Soft/LTL_Soft_1_Atari.bd LTL_Soft/LTL_Soft_2_Atari.bd
LTL_Soft_DATA = $(LTL_Soft_CAVES)
Lukas_Shambisdir = $(pkgdatadir)/caves/Lukas_Shambis
Lukas_Shambis_CAVES = Lukas_Shambis/Lush_World_1.gds Lukas_Shambis/Lush_World_2.gds Lukas_Shambis/Lush_World_3.gds Lukas_Shambis/Lush_World_4.gds
Lukas_Shambis_DATA = $(Lukas_Shambis_CAVES)
Madgamedir = $(pkgdatadir)/caves/Madgame
Madgame_CAVES = Madgame/Boulder_Dash_7.gds
Madgame_DATA = $(Madgame_CAVES)
Mapasoftdir = $(pkgdatadir)/caves/Mapasoft
Mapasoft_CAVES = Mapasoft/Mapasoft_Atari.gds
Mapasoft_DATA = $(Mapasoft_CAVES)
Marek_Rothdir = $(pkgdatadir)/caves/Marek_Roth
Marek_Roth_CAVES = Marek_Roth/Crazy_Dream_1.gds Marek_Roth/Crazy_Dream_2.gds Marek_Roth/Crazy_Dream_3.gds Marek_Roth/Crazy_Dream_4.gds Marek_Roth/Crazy_Dream_5.gds Marek_Roth/Crazy_Dream_6.gds Marek_Roth/Crazy_Dream_7.gds Marek_Roth/Crazy_Dream_8.gds Marek_Roth/Crazy_Dream_9.gds Marek_Roth/Deluxe_Caves_1.gds Marek_Roth/Deluxe_Caves_2.gds Marek_Roth/Deluxe_Caves_3.gds Marek_Roth/Deluxe_Caves_4.gds Marek_Roth/Deluxe_Dash_1.gds Marek_Roth/Deluxe_Dash_2.gds Marek_Roth/Deluxe_Dash_3.gds Marek_Roth/De_Luxe_Remix_1.gds Marek_Roth/De_Luxe_Remix_2.gds Marek_Roth/De_Luxe_Remix_3.gds Marek_Roth/De_Luxe_Remix_4.gds Marek_Roth/De_Luxe_Remix_5.gds Marek_Roth/De_Luxe_Remix_6.gds Marek_Roth/De_Luxe_Remix_7.gds Marek_Roth/De_Luxe_Remix_8.gds Marek_Roth/Groessenwarnsinnig_Boulder_Dash.gds Marek_Roth/Labyrinth_Dash.gds Marek_Roth/Sensemann_Dash.gds Marek_Roth/Tutorial.bd Marek_Roth/Tutorial.gds
Marek_Roth_DATA = $(Marek_Roth_CAVES)
Mario_Albrechtdir = $(pkgdatadir)/caves/Mario_Albrecht
Mario_Albrecht_CAVES = Mario_Albrecht/Mario_Dash_1.gds Mario_Albrecht/Mario_Dash_2.gds Mario_Albrecht/Mario_Dash_3.gds
Mario_Albrecht_DATA = $(Mario_Albrecht_CAVES)
Matthias_Kothdir = $(pkgdatadir)/caves/Matthias_Koth
Matthias_Koth_CAVES = Matthias_Koth/Let_It_Boulder_Dash.gds
Matthias_Koth_DATA = $(Matthias_Koth_CAVES)
Matthias_Steinerdir = $(pkgdatadir)/caves/Matthias_Steiner
Matthias_Steiner_CAVES = Matthias_Steiner/Boulder_Dash_1_Plus.gds Matthias_Steiner/Boulder_Dash_2_Plus.gds Matthias_Steiner/Boulder_Dash_3_Plus.gds
Matthias_Steiner_DATA = $(Matthias_Steiner_CAVES)
Maxdir = $(pkgdatadir)/caves/Max
Max_CAVES = Max/Max1.bd Max/Max2.bd Max/Mini.bd
Max_DATA = $(Max_CAVES)
MB_Softdir = $(pkgdatadir)/caves/MB_Soft
MB_Soft_CAVES = MB_Soft/Boulder_Games_0.gds MB_Soft/Boulder_Games_1.gds MB_Soft/Boulder_Games_2.gds MB_Soft/Boulder_Games_3.gds MB_Soft/Boulder_Games_4.gds MB_Soft/Boulder_Games_5.gds MB_Soft/Boulder_Games_6.gds MB_Soft/Boulder_Games_7.gds MB_Soft/Boulder_Games_8.gds MB_Soft/Boulder_Games_9.gds
MB_Soft_DATA = $(MB_Soft_CAVES)
Metalmorphosisdir = $(pkgdatadir)/caves/Metalmorphosis
Metalmorphosis_CAVES = Metalmorphosis/Metal_Dash_I.gds
Metalmorphosis_DATA = $(Metalmorphosis_CAVES)
Michael_and_Ingodir = $(pkgdatadir)/caves/Michael_and_Ingo
Michael_and_Ingo_CAVES = Michael_and_Ingo/Michingo_Dash_1.gds Michael_and_Ingo/Michingo_Dash_2.gds Michael_and_Ingo/Michingo_Dash_3.gds Michael_and_Ingo/Michingo_Professional.gds Michael_and_Ingo/Michingo_Professional_Remix.gds
Michael_and_Ingo_DATA = $(Michael_and_Ingo_CAVES)
MJMandir = $(pkgdatadir)/caves/MJMan
MJMan_CAVES = MJMan/MJMan_s_Boulder_Dash.gds
MJMan_DATA = $(MJMan_CAVES)
MJRdir = $(pkgdatadir)/caves/MJR
MJR_CAVES = MJR/MJR_Boulder_Dash.gds MJR/MJR_Boulder_Dash_2.gds MJR/MJR_Boulder_Dash_Pro.gds
MJR_DATA = $(MJR_CAVES)
MrJokerdir = $(pkgdatadir)/caves/MrJoker
MrJoker_CAVES = MrJoker/Joker_Dash_1.gds MrJoker/Joker_Dash_4.gds MrJoker/Lucky_Dash.gds MrJoker/Monster_Dash.gds
MrJoker_DATA = $(MrJoker_CAVES)
MrNobodydir = $(pkgdatadir)/caves/MrNobody
MrNobody_CAVES = MrNobody/BoulderDash_Game_2.gds MrNobody/BoulderDash_Remix_01.gds MrNobody/BoulderDash_Remix_02.gds
MrNobody_DATA = $(MrNobody_CAVES)
MrNonflexdir = $(pkgdatadir)/caves/MrNonflex
MrNonflex_CAVES = MrNonflex/Boulder_Dash_Super_Prof.gds
MrNonflex_DATA = $(MrNonflex_CAVES)
MrRockforddir = $(pkgdatadir)/caves/MrRockford
MrRockford_CAVES = MrRockford/Boulder_Dash_XII.gds MrRockford/Boulder_Dash_XIII.gds
MrRockford_DATA = $(MrRockford_CAVES)
NO1dir = $(pkgdatadir)/caves/NO1
NO1_CAVES = NO1/Boulderdash_Beginner.gds NO1/Boulder_Change.gds NO1/Eat_Dash_1.gds NO1/Eat_Dash_3.gds NO1/No1_Boulder_01.gds NO1/No1_Boulder_02.gds NO1/No1_Boulder_03.gds NO1/No1_Boulder_04.gds NO1/No1_Boulder_05.gds NO1/No1_Boulder_06.gds NO1/No1_Boulder_07.gds NO1/No1_Boulder_08.gds NO1/No1_Boulder_09.gds NO1/No1_Boulder_10.gds NO1/No1_Boulder_11.gds NO1/No1_Boulder_12.gds NO1/No1_Boulder_16.gds NO1/No1_Boulder_17.gds NO1/No1_Boulder_18.gds NO1/No1_Boulder_19.gds NO1/No1_Boulder_20.gds NO1/No1_Boulder_21.gds NO1/No1_Boulder_22.gds NO1/No1_Boulder_23.gds NO1/No1_Boulder_24.gds NO1/No1_Boulder_25.gds NO1/No1_Boulder_26.gds NO1/No1_Boulder_27.gds NO1/No1_Boulder_30.gds NO1/No1_Boulder_31.gds NO1/No1_Boulder_40.gds NO1/No1_Boulder_41.gds NO1/No1_Boulder_42.gds NO1/No1_Boulder_43.gds NO1/No1_Boulder_44.gds NO1/No1_Boulder_45.gds NO1/No1_Boulder_46.gds NO1/NoPowerDash_1.bd NO1/Son_Of_Rockford.gds
NO1_DATA = $(NO1_CAVES)
NO1_delightdir = $(pkgdatadir)/caves/NO1_delight
NO1_delight_CAVES = NO1_delight/No_One_Delight_01.gds \
	NO1_delight/No_One_Delight_02.gds \
	NO1_delight/No_One_Delight_03.gds \
	NO1_delight/No_One_Delight_04.gds \
	NO1_delight/No_One_Delight_05.gds \
	NO1_delight/No_One_Delight_06.gds \
	NO1_delight/No_One_Delight_07.gds \
	NO1_delight/No_One_Delight_08.gds \
	NO1_delight/No_One_Delight_09.gds \
	NO1_delight/No_One_Delight_10.gds \
	NO1_delight/No_One_Delight_11.gds \
	NO1_delight/No_One_Delight_12.gds \
	NO1_delight/No_One_Delight_13.gds \
	NO1_delight/No_One_Delight_14.gds \
	NO1_delight/No_One_Delight_15.gds \
	NO1_delight/No_One_Delight_16.gds \
	NO1_delight/No_One_Delight_17.gds \
	NO1_delight/No_One_Delight_18.gds \
	NO1_delight/No_One_Delight_19.gds \
	NO1_delight/No_One_Delight_20.gds \
	NO1_delight/No_One_Delight_21.gds \
	NO1_delight/No_One_Delight_22.gds \
	NO1_delight/No_One_Delight_23.gds \
	NO1_delight/No_One_Delight_24.gds \
	NO1_delight/No_One_Delight_25.gds \
	NO1_delight/No_One_Delight_26.gds \
	NO1_delight/No_One_Delight_27.gds \
	NO1_delight/No_One_Delight_28.gds \
	NO1_delight/No_One_Delight_29.gds \
	NO1_delight/No_One_Delight_30.gds \
	NO1_delight/No_One_Delight_31.gds \
	NO1_delight/No_One_Delight_32.gds \
	NO1_delight/No_One_Delight_33.gds \
	NO1_delight/No_One_Delight_34.gds \
	NO1_delight/No_One_Delight_35.gds \
	NO1_delight/No_One_Delight_36.gds \
	NO1_delight/No_One_Delight_37.gds \
	NO1_delight/No_One_Delight_38.gds \
	NO1_delight/No_One_Delight_39.gds \
	NO1_delight/No_One_Delight_40.gds \
	NO1_delight/No_One_Delight_41.gds \
	NO1_delight/No_One_Delight_42.gds \
	NO1_delight/No_One_Delight_43.gds \
	NO1_delight/No_One_Delight_44.gds \
	NO1_delight/No_One_Delight_45.gds
NO1_delight_DATA = $(NO1_delight_CAVES)
NO1_primadir = $(pkgdatadir)/caves/NO1_prima
NO1_prima_CAVES = NO1_prima/No_One_Prima_01.gds \
	NO1_prima/No_One_Prima_02.gds NO1_prima/No_One_Prima_03.gds \
	NO1_prima/No_One_Prima_04.gds NO1_prima/No_One_Prima_05.gds \
	NO1_prima/No_One_Prima_06.gds NO1_prima/No_One_Prima_07.gds \
	NO1_prima/No_One_Prima_08.gds NO1_prima/No_One_Prima_09.gds \
	NO1_prima/No_One_Prima_10.gds NO1_prima/No_One_Prima_11.gds \
	NO1_prima/No_One_Prima_12.gds NO1_prima/No_One_Prima_13.gds \
	NO1_prima/No_One_Prima_14.gds NO1_prima/No_One_Prima_15.gds \
	NO1_prima/No_One_Prima_16.gds NO1_prima/No_One_Prima_17.gds \
	NO1_prima/No_One_Prima_18.gds NO1_prima/No_One_Prima_19.gds \
	NO1_prima/No_One_Prima_21.gds NO1_prima/No_One_Prima_22.gds \
	NO1_prima/No_One_Prima_23.gds NO1_prima/No_One_Prima_24.gds \
	NO1_prima/No_One_Prima_25.gds NO1_prima/No_One_Prima_26.gds \
	NO1_prima/No_One_Prima_27.gds NO1_prima/No_One_Prima_28.gds \
	NO1_prima/No_One_Prima_29.gds NO1_prima/No_One_Prima_30.gds \
	NO1_prima/No_One_Prima_31.gds NO1_prima/No_One_Prima_32.gds \
	NO1_prima/No_One_Prima_33.gds NO1_prima/No_One_Prima_34.gds \
	NO1_prima/No_One_Prima_35.gds NO1_prima/No_One_Prima_36.gds \
	NO1_prima/No_One_Prima_37.gds NO1_prima/No_One_Prima_38.gds \
	NO1_prima/No_One_Prima_39.gds NO1_prima/No_One_Prima_40.gds \
	NO1_prima/No_One_Prima_41.gds NO1_prima/No_One_Prima_42.gds
NO1_prima_DATA = $(NO1_prima_CAVES)
Ododir = $(pkgdatadir)/caves/Odo
Odo_CAVES = Odo/The_Lost_Levels_1.gds Odo/The_Lost_Levels_3.gds
Odo_DATA = $(Odo_CAVES)
Olaf_Rothdir = $(pkgdatadir)/caves/Olaf_Roth
Olaf_Roth_CAVES = Olaf_Roth/Bilder_Dash.gds Olaf_Roth/Cool_Dash_1.gds Olaf_Roth/Cool_Dash_10.gds Olaf_Roth/Cool_Dash_11.gds Olaf_Roth/Cool_Dash_2.gds Olaf_Roth/Cool_Dash_3.gds Olaf_Roth/Cool_Dash_4.gds Olaf_Roth/Cool_Dash_5.gds Olaf_Roth/Cool_Dash_6.gds Olaf_Roth/Cool_Dash_7.gds Olaf_Roth/Cool_Dash_8.gds Olaf_Roth/Cool_Dash_9.gds Olaf_Roth/Cool_Eat.gds Olaf_Roth/Easter_Dash.gds Olaf_Roth/Giga_Boulder_1.gds Olaf_Roth/Giga_Boulder_2.gds Olaf_Roth/Giga_Boulder_3.gds Olaf_Roth/Giga_Boulder_4.gds Olaf_Roth/Terminator_Dash.gds
Olaf_Roth_DATA = $(Olaf_Roth_CAVES)
Oriondir = $(pkgdatadir)/caves/Orion
Orion_CAVES = Orion/Orion_Dash_1.gds
Orion_DATA = $(Orion_CAVES)
Papisdir = $(pkgdatadir)/caves/Papis
Papis_CAVES = Papis/Boulder_Dash_12.gds Papis/Boulder_Dash_13.gds Papis/Boulder_Dash_14.gds Papis/Boulder_Dash_15.gds Papis/Boulder_Dash_38.gds Papis/Boulder_Dash_39.gds
Papis_DATA = $(Papis_CAVES)
Persoftdir = $(pkgdatadir)/caves/Persoft
Persoft_CAVES = Persoft/HOP_1_Atari.bd Persoft/HOP_2_Atari.bd Persoft/HOP_3_Atari.bd Persoft/HOP_4_Atari.bd Persoft/HOP_5_Atari.bd
Persoft_DATA = $(Persoft_CAVES)
Petedir = $(pkgdatadir)/caves/Pete
Pete_CAVES = Pete/Pete_Dash_1.gds Pete/Pete_Dash_2.gds Pete/Pete_Dash_3.gds Pete/Pete_Dash_4.gds Pete/Pete_Dash_5.gds Pete/Pete_Dash_8.gds Pete/Pete_Dash_9.gds Pete/Pete_Dash_Beginner.gds
Pete_DATA = $(Pete_CAVES)
Peter_Liepadir = $(pkgdatadir)/caves/Peter_Liepa
Peter_Liepa_CAVES = Peter_Liepa/Boulder_Dash_1.bd Peter_Liepa/Boulder_Dash_1.gds Peter_Liepa/Boulder_Dash_1_Atari.bd Peter_Liepa/Boulder_Dash_1_Atari.gds Peter_Liepa/Boulder_Dash_2.bd Peter_Liepa/Boulder_Dash_2.gds Peter_Liepa/Boulder_Dash_2_Atari.bd Peter_Liepa/Boulder_Dash_2_Atari.gds Peter_Liepa/Boulder_Dash_4.bd Peter_Liepa/Construction_Kit.gds Peter_Liepa/Construction_Kit_Examples.gds
Peter_Liepa_DATA = $(Peter_Liepa_CAVES)
Peter_Tdir = $(pkgdatadir)/caves/Peter_T
Peter_T_CAVES = Peter_T/AustriaDash_01.gds Peter_T/AustriaDash_02.gds
Peter_T_DATA = $(Peter_T_CAVES)
Phoenixdir = $(pkgdatadir)/caves/Phoenix
Phoenix_CAVES = Phoenix/Fun_Dash_02.gds Phoenix/Fun_Dash_04.gds Phoenix/Fun_Dash_05.gds Phoenix/Fun_Dash_06.gds Phoenix/Fun_Dash_08.gds Phoenix/Fun_Dash_09.gds Phoenix/Fun_Dash_11.gds Phoenix/Fun_Dash_12.gds Phoenix/Fun_Dash_13.gds Phoenix/Fun_Dash_14.gds Phoenix/Fun_Dash_16.gds Phoenix/Fun_Dash_18.gds Phoenix/Fun_Dash_19.gds Phoenix/Fun_Dash_20.gds Phoenix/Hawk_Dash_01.gds Phoenix/Hawk_Dash_03.gds
Phoenix_DATA = $(Phoenix_CAVES)
Pierre_and_Olivierdir = $(pkgdatadir)/caves/Pierre_and_Olivier
Pierre_and_Olivier_CAVES = Pierre_and_Olivier/Boulder_Dash_NFC_II.bd
Pierre_and_Olivier_DATA = $(Pierre_and_Olivier_CAVES)
Posocopi_Waldkirchdir = $(pkgdatadir)/caves/Posocopi_Waldkirch
Posocopi_Waldkirch_CAVES = Posocopi_Waldkirch/AFL_Posocopi.gds \
	Posocopi_Waldkirch/Boulder_Dash_47.gds \
	Posocopi_Waldkirch/Boulder_Dash_48.bd \
	Posocopi_Waldkirch/Boulder_Dash_49.bd \
	Posocopi_Waldkirch/Boulder_Dash_50.bd \
	Posocopi_Waldkirch/Boulder_Dash_51.gds \
	Posocopi_Waldkirch/Emerald_Dash_II.bd \
	Posocopi_Waldkirch/First_Boulder_1.gds \
	Posocopi_Waldkirch/First_Boulder_2.gds \
	Posocopi_Waldkirch/First_Boulder_3.gds \
	Posocopi_Waldkirch/Legend_Of_Powerdash.gds \
	Posocopi_Waldkirch/Legend_Of_Powerdash_No_One.gds \
	Posocopi_Waldkirch/Mini_Wipe_Dash.gds \
	Posocopi_Waldkirch/Powerdash_1.bd \
	Posocopi_Waldkirch/Powereat_1.gds \
	Posocopi_Waldkirch/Professional_Powerdash_1.gds \
	Posocopi_Waldkirch/Professional_Powerdash_2.gds \
	Posocopi_Waldkirch/Professional_Powerdash_3.gds \
	Posocopi_Waldkirch/Profpackdash_Part_A.gds \
	Posocopi_Waldkirch/Profpackdash_Part_B.gds \
	Posocopi_Waldkirch/Profpackdash_Part_C.gds \
	Posocopi_Waldkirch/Profpackdash_Part_D.gds \
	Posocopi_Waldkirch/Profpackdash_Part_E.gds \
	Posocopi_Waldkirch/Return_Of_Powerdash.gds \
	Posocopi_Waldkirch/The_Best_Of_Powerdash.gds
Posocopi_Waldkirch_DATA = $(Posocopi_Waldkirch_CAVES)
Profi_Boulder_disksdir = $(pkgdatadir)/caves/Profi_Boulder_disks
Profi_Boulder_disks_CAVES = Profi_Boulder_disks/Boulder_Head_1.gds \
	Profi_Boulder_disks/Brutalo_Boulder.gds \
	Profi_Boulder_disks/Gerd_Boulder_1.gds \
	Profi_Boulder_disks/Gerd_Boulder_2.gds \
	Profi_Boulder_disks/Gerd_Boulder_3.gds \
	Profi_Boulder_disks/Gerd_Boulder_4.gds \
	Profi_Boulder_disks/No_One_Boulder_02.gds \
	Profi_Boulder_disks/No_One_Boulder_04.gds \
	Profi_Boulder_disks/No_One_Boulder_06.gds \
	Profi_Boulder_disks/No_One_Boulder_07.gds \
	Profi_Boulder_disks/No_One_Boulder_Head_06.gds \
	Profi_Boulder_disks/Null_Bock_Bd.gds \
	Profi_Boulder_disks/Professional_Boulder_Dash.gds \
	Profi_Boulder_disks/Profi_Boulder_001.gds \
	Profi_Boulder_disks/Profi_Boulder_002.gds \
	Profi_Boulder_disks/Profi_Boulder_003.gds \
	Profi_Boulder_disks/Profi_Boulder_004.gds \
	Profi_Boulder_disks/Profi_Boulder_005.gds \
	Profi_Boulder_disks/Profi_Boulder_006.gds \
	Profi_Boulder_disks/Profi_Boulder_007.gds \
	Profi_Boulder_disks/Profi_Boulder_008.gds \
	Profi_Boulder_disks/Profi_Boulder_009.gds \
	Profi_Boulder_disks/Profi_Boulder_010.gds \
	Profi_Boulder_disks/Profi_Boulder_011.gds \
	Profi_Boulder_disks/Profi_Boulder_012.gds \
	Profi_Boulder_disks/Profi_Boulder_013.gds \
	Profi_Boulder_disks/Profi_Boulder_014.gds \
	Profi_Boulder_disks/Profi_Boulder_015.gds \
	Profi_Boulder_disks/Profi_Boulder_016.gds \
	Profi_Boulder_disks/Profi_Boulder_017.gds \
	Profi_Boulder_disks/Profi_Boulder_018.gds \
	Profi_Boulder_disks/Profi_Boulder_019.gds \
	Profi_Boulder_disks/Profi_Boulder_022.gds \
	Profi_Boulder_disks/Profi_Boulder_023.gds \
	Profi_Boulder_disks/Profi_Boulder_024.gds \
	Profi_Boulder_disks/Profi_Boulder_025.gds \
	Profi_Boulder_disks/Profi_Boulder_026.gds \
	Profi_Boulder_disks/Profi_Boulder_027.gds \
	Profi_Boulder_disks/Profi_Boulder_028.gds \
	Profi_Boulder_disks/Profi_Boulder_029.gds \
	Profi_Boulder_disks/Profi_Boulder_030.gds \
	Profi_Boulder_disks/Profi_Boulder_031.gds \
	Profi_Boulder_disks/Profi_Boulder_032.gds \
	Profi_Boulder_disks/Profi_Boulder_033.gds \
	Profi_Boulder_disks/Profi_Boulder_034.gds \
	Profi_Boulder_disks/Profi_Boulder_035.gds \
	Profi_Boulder_disks/Profi_Boulder_036.gds \
	Profi_Boulder_disks/Profi_Boulder_037.gds \
	Profi_Boulder_disks/Profi_Boulder_038.gds \
	Profi_Boulder_disks/Profi_Boulder_039.gds \
	Profi_Boulder_disks/Profi_Boulder_040.gds \
	Profi_Boulder_disks/Profi_Boulder_041.gds \
	Profi_Boulder_disks/Profi_Boulder_042.gds \
	Profi_Boulder_disks/Profi_Boulder_043.gds \
	Profi_Boulder_disks/Profi_Boulder_044.gds \
	Profi_Boulder_disks/Profi_Boulder_045.gds \
	Profi_Boulder_disks/Profi_Boulder_046.gds \
	Profi_Boulder_disks/Profi_Boulder_047.gds \
	Profi_Boulder_disks/Profi_Boulder_048.gds \
	Profi_Boulder_disks/Profi_Boulder_049.gds \
	Profi_Boulder_disks/Profi_Boulder_050.gds \
	Profi_Boulder_disks/Profi_Boulder_051.gds \
	Profi_Boulder_disks/Profi_Boulder_052.gds \
	Profi_Boulder_disks/Profi_Boulder_053.gds \
	Profi_Boulder_disks/Profi_Boulder_057.gds \
	Profi_Boulder_disks/Profi_Boulder_058.gds \
	Profi_Boulder_disks/Profi_Boulder_059.gds \
	Profi_Boulder_disks/Profi_Boulder_060.gds \
	Profi_Boulder_disks/Profi_Boulder_061.gds \
	Profi_Boulder_disks/Profi_Boulder_062.gds \
	Profi_Boulder_disks/Profi_Boulder_063.gds \
	Profi_Boulder_disks/Profi_Boulder_064.gds \
	Profi_Boulder_disks/Profi_Boulder_065.gds \
	Profi_Boulder_disks/Profi_Boulder_066.gds \
	Profi_Boulder_disks/Profi_Boulder_067.gds \
	Profi_Boulder_disks/Profi_Boulder_068.gds \
	Profi_Boulder_disks/Profi_Boulder_069.gds \
	Profi_Boulder_disks/Profi_Boulder_070.gds \
	Profi_Boulder_disks/Profi_Boulder_071.gds \
	Profi_Boulder_disks/Profi_Boulder_072.gds \
	Profi_Boulder_disks/Profi_Boulder_073.gds \
	Profi_Boulder_disks/Profi_Boulder_074.gds \
	Profi_Boulder_disks/Profi_Boulder_075.gds \
	Profi_Boulder_disks/Profi_Boulder_076.gds \
	Profi_Boulder_disks/Profi_Boulder_077.gds \
	Profi_Boulder_disks/Profi_Boulder_078.gds \
	Profi_Boulder_disks/Profi_Boulder_079.gds \
	Profi_Boulder_disks/Profi_Boulder_080.gds \
	Profi_Boulder_disks/Profi_Boulder_081.gds \
	Profi_Boulder_disks/Profi_Boulder_082.gds \
	Profi_Boulder_disks/Profi_Boulder_083.gds \
	Profi_Boulder_disks/Profi_Boulder_084.gds \
	Profi_Boulder_disks/Profi_Boulder_085.gds \
	Profi_Boulder_disks/Profi_Boulder_086.gds \
	Profi_Boulder_disks/Profi_Boulder_087.gds \
	Profi_Boulder_disks/Profi_Boulder_088.gds \
	Profi_Boulder_disks/Profi_Boulder_089.gds \
	Profi_Boulder_disks/Profi_Boulder_090.gds \
	Profi_Boulder_disks/Profi_Boulder_091.gds \
	Profi_Boulder_disks/Profi_Boulder_092.gds \
	Profi_Boulder_disks/Profi_Boulder_093.gds \
	Profi_Boulder_disks/Profi_Boulder_094.gds \
	Profi_Boulder_disks/Profi_Boulder_095.gds \
	Profi_Boulder_disks/Profi_Boulder_096.gds \
	Profi_Boulder_disks/Profi_Boulder_097.gds \
	Profi_Boulder_disks/Profi_Boulder_098.gds \
	Profi_Boulder_disks/Profi_Boulder_099.gds \
	Profi_Boulder_disks/Profi_Boulder_100.gds \
	Profi_Boulder_disks/Profi_Boulder_101.gds \
	Profi_Boulder_disks/Profi_Boulder_102.gds \
	Profi_Boulder_disks/Profi_Boulder_103.gds \
	Profi_Boulder_disks/Profi_Boulder_104.gds \
	Profi_Boulder_disks/Profi_Boulder_105.gds \
	Profi_Boulder_disks/Profi_Boulder_106.gds \
	Profi_Boulder_disks/Profi_Boulder_107.gds \
	Profi_Boulder_disks/Profi_Boulder_108.gds \
	Profi_Boulder_disks/Profi_Boulder_109.gds \
	Profi_Boulder_disks/Profi_Boulder_110.gds \
	Profi_Boulder_disks/Profi_Boulder_111.gds \
	Profi_Boulder_disks/Profi_Boulder_112.gds \
	Profi_Boulder_disks/Profi_Boulder_113.gds \
	Profi_Boulder_disks/Profi_Boulder_114.gds \
	Profi_Boulder_disks/Profi_Boulder_115.gds \
	Profi_Boulder_disks/Profi_Boulder_116.gds \
	Profi_Boulder_disks/Profi_Boulder_117.gds \
	Profi_Boulder_disks/Profi_Boulder_118.gds \
	Profi_Boulder_disks/Profi_Boulder_119.gds \
	Profi_Boulder_disks/Rockford_A.gds \
	Profi_Boulder_disks/Rockford_B.gds \
	Profi_Boulder_disks/Rockford_C.gds \
	Profi_Boulder_disks/Rockford_D.gds \
	Profi_Boulder_disks/Rockford_E.gds \
	Profi_Boulder_disks/Rockford_F.gds \
	Profi_Boulder_disks/Rockford_G.gds \
	Profi_Boulder_disks/Rockford_H.gds \
	Profi_Boulder_disks/Rockford_I.gds \
	Profi_Boulder_disks/Rockford_J.gds
Profi_Boulder_disks_DATA = $(Profi_Boulder_disks_CAVES)
Prof_Knibbledir = $(pkgdatadir)/caves/Prof_Knibble
Prof_Knibble_CAVES = Prof_Knibble/Best_Of_Knibble.gds \
	Prof_Knibble/Boulderdash_Visit.bd \
	Prof_Knibble/Boulder_Dash_Friday.gds \
	Prof_Knibble/Boulder_Dash_Heavy_01.gds \
	Prof_Knibble/Boulder_Dash_Heavy_02.gds \
	Prof_Knibble/Boulder_Dash_Heavy_03.gds \
	Prof_Knibble/Boulder_Dash_Heavy_04.gds \
	Prof_Knibble/Boulder_Dash_Heavy_05.gds \
	Prof_Knibble/Boulder_Dash_Monday.gds \
	Prof_Knibble/Boulder_Dash_Quicky.bd \
	Prof_Knibble/Boulder_Dash_Saturday.gds \
	Prof_Knibble/Boulder_Dash_Sunday.gds \
	Prof_Knibble/Boulder_Dash_Thursday.gds \
	Prof_Knibble/Boulder_Dash_Tuesday.gds \
	Prof_Knibble/Boulder_Dash_Wednesday.gds \
	Prof_Knibble/Knibble_Dash_1.gds \
	Prof_Knibble/Knibble_Dash_2.gds \
	Prof_Knibble/Knibble_Dash_3.gds \
	Prof_Knibble/Knibble_Dash_4.gds \
	Prof_Knibble/Knibble_Dash_5.gds \
	Prof_Knibble/Knibble_Dash_7.gds \
	Prof_Knibble/Knibble_Dash_8.gds \
	Prof_Knibble/Knibble_Dash_9.gds Prof_Knibble/Knibble_Eat_1.gds \
	Prof_Knibble/Knibble_Eat_2.gds Prof_Knibble/Knibble_Eat_3.gds \
	Prof_Knibble/Knibble_Eat_Effect_1.gds \
	Prof_Knibble/Knibble_Power_1.gds \
	Prof_Knibble/Knibble_Revival.gds Prof_Knibble/Mrs_Rockford.gds \
	Prof_Knibble/New_Boulder_Dash_1.gds
Prof_Knibble_DATA = $(Prof_Knibble_CAVES)
Renatedir = $(pkgdatadir)/caves/Renate
Renate_CAVES = Renate/Tululu_Dash.gds
Renate_DATA = $(Renate_CAVES)
Rolf_Langedir = $(pkgdatadir)/caves/Rolf_Lange
Rolf_Lange_CAVES = Rolf_Lange/Oldiedash.gds Rolf_Lange/Rolodash_I.gds Rolf_Lange/Rolodash_II.gds Rolf_Lange/Rolodash_III.gds Rolf_Lange/Rolodash_IV.gds
Rolf_Lange_DATA = $(Rolf_Lange_CAVES)
Rolf_Rothdir = $(pkgdatadir)/caves/Rolf_Roth
Rolf_Roth_CAVES = Rolf_Roth/Chopper_Dash.gds Rolf_Roth/Ivans_Dash.gds \
	Rolf_Roth/Nordseepower_01.gds Rolf_Roth/Nordseepower_02.gds \
	Rolf_Roth/Nordseepower_03.gds Rolf_Roth/Nordseepower_04.gds \
	Rolf_Roth/Nordseepower_05.gds Rolf_Roth/Schlicktown_01.gds \
	Rolf_Roth/Schlicktown_02.gds Rolf_Roth/Schlicktown_03.gds \
	Rolf_Roth/Schlicktown_04.gds Rolf_Roth/Schlicktown_05.gds \
	Rolf_Roth/Schlicktown_06.gds Rolf_Roth/Schlicktown_07.gds \
	Rolf_Roth/Schlicktown_08.gds Rolf_Roth/Schlicktown_09.gds \
	Rolf_Roth/Schlicktown_10.gds Rolf_Roth/Schlicktown_11.gds \
	Rolf_Roth/Schlicktown_12.gds Rolf_Roth/Schlicktown_13.gds \
	Rolf_Roth/Schlicktown_14.gds Rolf_Roth/Schlicktown_15.gds \
	Rolf_Roth/Stone_Age_00.gds Rolf_Roth/Stone_Age_01.gds \
	Rolf_Roth/Stone_Age_02.gds Rolf_Roth/Stone_Age_03.gds \
	Rolf_Roth/Stone_Age_04.gds Rolf_Roth/Stone_Age_05.gds \
	Rolf_Roth/Stone_Age_06.gds Rolf_Roth/Stone_Age_07.gds \
	Rolf_Roth/Stone_Age_08.gds Rolf_Roth/Stone_Age_09.gds \
	Rolf_Roth/Stone_Age_10.gds Rolf_Roth/Stone_Age_11.gds \
	Rolf_Roth/Stone_Age_12.gds Rolf_Roth/Stone_Age_13.gds \
	Rolf_Roth/Stone_Age_14.gds Rolf_Roth/Stone_Age_15.gds \
	Rolf_Roth/Stone_Age_16.gds Rolf_Roth/Stone_Age_17.gds \
	Rolf_Roth/Stone_Age_18.gds Rolf_Roth/Stone_Age_19.gds \
	Rolf_Roth/Stone_Age_20.gds Rolf_Roth/Stone_Age_21.gds \
	Rolf_Roth/Stone_Age_22.gds Rolf_Roth/Stone_Age_23.gds \
	Rolf_Roth/Stone_Age_24.gds Rolf_Roth/Stone_Age_25.gds \
	Rolf_Roth/Stone_Age_26.gds Rolf_Roth/Stone_Age_27.gds \
	Rolf_Roth/Stone_Age_28.gds Rolf_Roth/Stone_Age_29.gds \
	Rolf_Roth/Stone_Age_30.gds
Rolf_Roth_DATA = $(Rolf_Roth_CAVES)
Ron_van_Schaikdir = $(pkgdatadir)/caves/Ron_van_Schaik
Ron_van_Schaik_CAVES = Ron_van_Schaik/Forkidz_Dash_01.gds Ron_van_Schaik/Forkidz_Dash_02.gds Ron_van_Schaik/Schaik_Dash_01.gds Ron_van_Schaik/Schaik_Dash_02.gds Ron_van_Schaik/Schaik_Dash_03.gds Ron_van_Schaik/Schaik_Dash_04.gds Ron_van_Schaik/Schaik_Dash_05.gds Ron_van_Schaik/Schaik_Dash_06.gds Ron_van_Schaik/Schaik_Dash_07.gds Ron_van_Schaik/Schaik_Dash_08.gds Ron_van_Schaik/Schaik_Dash_09.gds Ron_van_Schaik/Schaik_Dash_10.gds Ron_van_Schaik/Schaik_Dash_11.gds Ron_van_Schaik/Schaik_Dash_12.gds Ron_van_Schaik/Schaik_Dash_13.gds Ron_van_Schaik/Schaik_Dash_14.gds
Ron_van_Schaik_DATA = $(Ron_van_Schaik_CAVES)
Rory_Agstendir = $(pkgdatadir)/caves/Rory_Agsten
Rory_Agsten_CAVES = Rory_Agsten/RTA_Dash_1.bd Rory_Agsten/RTA_Dash_2.bd Rory_Agsten/RTA_Dash_3.bd Rory_Agsten/RTA_Dash_4.bd Rory_Agsten/RTA_Dash_5.bd Rory_Agsten/RTA_Dash_6.bd Rory_Agsten/RTA_Dash_7.bd Rory_Agsten/RTA_Dash_8L.bd
Rory_Agsten_DATA = $(Rory_Agsten_CAVES)
Schlonkeldir = $(pkgdatadir)/caves/Schlonkel
Schlonkel_CAVES = Schlonkel/The_Lost_Caves_1.gds Schlonkel/The_Lost_Caves_10.gds Schlonkel/The_Lost_Caves_2.gds Schlonkel/The_Lost_Caves_3.gds Schlonkel/The_Lost_Caves_3_with_hidden.gds Schlonkel/The_Lost_Caves_4.gds Schlonkel/The_Lost_Caves_5.gds Schlonkel/The_Lost_Caves_6.gds Schlonkel/The_Lost_Caves_7.gds Schlonkel/The_Lost_Caves_8.gds Schlonkel/The_Lost_Caves_9.gds
Schlonkel_DATA = $(Schlonkel_CAVES)
Scserbin_Zoltandir = $(pkgdatadir)/caves/Scserbin_Zoltan
Scserbin_Zoltan_CAVES = Scserbin_Zoltan/Atlantis_12.gds \
	Scserbin_Zoltan/Atlantis_13.gds \
	Scserbin_Zoltan/Atlantis_14.gds \
	Scserbin_Zoltan/Atlantis_15.gds \
	Scserbin_Zoltan/Atlantis_16.gds \
	Scserbin_Zoltan/Atlantis_17.gds \
	Scserbin_Zoltan/Atlantis_18.gds \
	Scserbin_Zoltan/Atlantis_19.gds \
	Scserbin_Zoltan/Atlantis_20.gds \
	Scserbin_Zoltan/Atlantis_21.gds \
	Scserbin_Zoltan/Atlantis_22.gds \
	Scserbin_Zoltan/Atlantis_23.gds \
	Scserbin_Zoltan/Atlantis_24.gds \
	Scserbin_Zoltan/Atlantis_25.gds \
	Scserbin_Zoltan/Atlantis_26.gds \
	Scserbin_Zoltan/Atlantis_27.gds \
	Scserbin_Zoltan/Atlantis_28.gds \
	Scserbin_Zoltan/Atlantis_29.gds \
	Scserbin_Zoltan/Atlantis_30.gds \
	Scserbin_Zoltan/Atlantis_31.gds \
	Scserbin_Zoltan/Atlantis_32.gds \
	Scserbin_Zoltan/Atlantis_33.gds \
	Scserbin_Zoltan/Atlantis_35.gds \
	Scserbin_Zoltan/Atlantis_36.gds \
	Scserbin_Zoltan/Atlantis_37.gds \
	Scserbin_Zoltan/Atlantis_38.gds \
	Scserbin_Zoltan/Atlantis_39.gds \
	Scserbin_Zoltan/Atlantis_40.gds \
	Scserbin_Zoltan/Atlantis_41.gds \
	Scserbin_Zoltan/Atlantis_42.gds \
	Scserbin_Zoltan/Atlantis_43.gds \
	Scserbin_Zoltan/Atlantis_44.gds \
	Scserbin_Zoltan/Atlantis_45.gds \
	Scserbin_Zoltan/Atlantis_46.gds \
	Scserbin_Zoltan/Atlantis_47.gds \
	Scserbin_Zoltan/Atlantis_48.gds \
	Scserbin_Zoltan/Atlantis_49.gds \
	Scserbin_Zoltan/Atlantis_50.gds \
	Scserbin_Zoltan/Atlantis_51.gds \
	Scserbin_Zoltan/Atlantis_52.gds \
	Scserbin_Zoltan/Atlantis_53.gds \
	Scserbin_Zoltan/Atlantis_54.gds \
	Scserbin_Zoltan/Atlantis_55.gds Scserbin_Zoltan/Batman01.gds \
	Scserbin_Zoltan/Batman02.gds Scserbin_Zoltan/Batman03.gds \
	Scserbin_Zoltan/Batman04.gds Scserbin_Zoltan/Batman05.gds \
	Scserbin_Zoltan/Batman06.gds Scserbin_Zoltan/Batman07.gds \
	Scserbin_Zoltan/Batman08.gds Scserbin_Zoltan/Batman09.gds \
	Scserbin_Zoltan/Batman10.gds Scserbin_Zoltan/Batman11.gds \
	Scserbin_Zoltan/Batman12.gds Scserbin_Zoltan/Batman13.gds \
	Scserbin_Zoltan/Batman14.gds Scserbin_Zoltan/Batman15.gds \
	Scserbin_Zoltan/Batman16.gds Scserbin_Zoltan/Batman17.gds \
	Scserbin_Zoltan/Batman18.gds Scserbin_Zoltan/Batman19.gds \
	Scserbin_Zoltan/Batman20.gds Scserbin_Zoltan/Batman21.gds \
	Scserbin_Zoltan/Batman22.gds Scserbin_Zoltan/Batman23.gds \
	Scserbin_Zoltan/Batman24.gds Scserbin_Zoltan/Batman25.gds \
	Scserbin_Zoltan/Batman26.gds Scserbin_Zoltan/Batman27.gds \
	Scserbin_Zoltan/Batman28.gds Scserbin_Zoltan/Batman29.gds \
	Scserbin_Zoltan/Batman30.gds Scserbin_Zoltan/Batman31.gds \
	Scserbin_Zoltan/Batman32.gds Scserbin_Zoltan/Batman33.gds \
	Scserbin_Zoltan/Batman34.gds Scserbin_Zoltan/Batman35.gds \
	Scserbin_Zoltan/Batman36.gds Scserbin_Zoltan/Batman37.gds \
	Scserbin_Zoltan/Batman38.gds Scserbin_Zoltan/Batman39.gds \
	Scserbin_Zoltan/Batman40.gds Scserbin_Zoltan/Batman41.gds \
	Scserbin_Zoltan/Batman42.gds Scserbin_Zoltan/Batman43.gds \
	Scserbin_Zoltan/Batman44.gds Scserbin_Zoltan/Batman45.gds \
	Scserbin_Zoltan/Batman46.gds Scserbin_Zoltan/Batman47.gds \
	Scserbin_Zoltan/Batman48.gds Scserbin_Zoltan/Batman49.gds \
	Scserbin_Zoltan/Batman50.gds Scserbin_Zoltan/Batman51.gds \
	Scserbin_Zoltan/Batman52.gds Scserbin_Zoltan/Batman53.gds \
	Scserbin_Zoltan/Batman54.gds Scserbin_Zoltan/Batman55.gds \
	Scserbin_Zoltan/Batman56.gds Scserbin_Zoltan/Batman57.gds \
	Scserbin_Zoltan/Batman58.gds Scserbin_Zoltan/Batman59.gds \
	Scserbin_Zoltan/Batman60.gds Scserbin_Zoltan/Batman61.gds \
	Scserbin_Zoltan/Batman62.gds Scserbin_Zoltan/Batman63.gds \
	Scserbin_Zoltan/Batman64.gds Scserbin_Zoltan/Batman65.gds \
	Scserbin_Zoltan/Batman66.gds Scserbin_Zoltan/Batman67.gds \
	Scserbin_Zoltan/Batman68.gds Scserbin_Zoltan/Batman69.gds \
	Scserbin_Zoltan/Batman70.gds Scserbin_Zoltan/Batman71.gds \
	Scserbin_Zoltan/Batman72.gds Scserbin_Zoltan/Batman73.gds \
	Scserbin_Zoltan/Batman74.gds Scserbin_Zoltan/Batman75.gds \
	Scserbin_Zoltan/Batman76.gds Scserbin_Zoltan/Batman77.gds \
	Scserbin_Zoltan/Batman78.gds Scserbin_Zoltan/Batman79.gds \
	Scserbin_Zoltan/Batman80.gds Scserbin_Zoltan/Batman81.gds \
	Scserbin_Zoltan/Batman82.gds Scserbin_Zoltan/Batman83.gds \
	Scserbin_Zoltan/Batman84.gds \
	Scserbin_Zoltan/Boulder_Dash_Bee_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Birds_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Dig_Dug_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Fire_Ant_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Ninja_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Pacman_001_Atari.bd \
	Scserbin_Zoltan/Boulder_Dash_Thief_001_Atari.bd \
	Scserbin_Zoltan/Dig_Dug_Dash_01.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_02.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_03.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_04.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_05.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_06.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_07.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_08.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_09.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_10.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_11.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_12.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_13.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_14.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_15.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_16.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_17.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_18.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_19.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_20.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_21.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_22.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_23.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_24.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_25.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_26.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_27.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_28.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_29.gds \
	Scserbin_Zoltan/Dig_Dug_Dash_30.gds \
	Scserbin_Zoltan/Ninja_Dash_00.gds \
	Scserbin_Zoltan/Ninja_Dash_01.gds \
	Scserbin_Zoltan/Ninja_Dash_02.gds \
	Scserbin_Zoltan/Ninja_Dash_03.gds \
	Scserbin_Zoltan/Ninja_Dash_04.gds \
	Scserbin_Zoltan/Ninja_Dash_05.gds \
	Scserbin_Zoltan/Ninja_Dash_06.gds \
	Scserbin_Zoltan/Ninja_Dash_07.gds \
	Scserbin_Zoltan/Ninja_Dash_08.gds \
	Scserbin_Zoltan/Ninja_Dash_09.gds \
	Scserbin_Zoltan/Ninja_Dash_10.gds \
	Scserbin_Zoltan/Ninja_Dash_11.gds \
	Scserbin_Zoltan/Ninja_Dash_12.gds \
	Scserbin_Zoltan/Ninja_Dash_13.gds \
	Scserbin_Zoltan/Ninja_Dash_14.gds \
	Scserbin_Zoltan/Ninja_Dash_15.gds \
	Scserbin_Zoltan/Ninja_Dash_16.gds \
	Scserbin_Zoltan/Ninja_Dash_17.gds \
	Scserbin_Zoltan/Ninja_Dash_18.gds \
	Scserbin_Zoltan/Ninja_Dash_19.gds \
	Scserbin_Zoltan/Ninja_Dash_20.gds \
	Scserbin_Zoltan/Ninja_Dash_21.gds \
	Scserbin_Zoltan/Ninja_Dash_22.gds \
	Scserbin_Zoltan/Ninja_Dash_23.gds \
	Scserbin_Zoltan/Ninja_Dash_24.gds \
	Scserbin_Zoltan/Ninja_Dash_25.gds \
	Scserbin_Zoltan/Ninja_Dash_26.gds \
	Scserbin_Zoltan/Ninja_Dash_27.gds \
	Scserbin_Zoltan/Ninja_Dash_28.gds \
	Scserbin_Zoltan/Ninja_Dash_29.gds \
	Scserbin_Zoltan/Ninja_Dash_30.gds \
	Scserbin_Zoltan/Ninja_Dash_31.gds \
	Scserbin_Zoltan/Ninja_Dash_32.gds \
	Scserbin_Zoltan/Ninja_Dash_33.gds \
	Scserbin_Zoltan/Ninja_Dash_34.gds \
	Scserbin_Zoltan/Ninja_Dash_35.gds \
	Scserbin_Zoltan/Ninja_Dash_36.gds \
	Scserbin_Zoltan/Ninja_Dash_37.gds \
	Scserbin_Zoltan/Ninja_Dash_38.gds \
	Scserbin_Zoltan/Ninja_Dash_39.gds \
	Scserbin_Zoltan/Ninja_Dash_40.gds \
	Scserbin_Zoltan/Ninja_Dash_41.gds \
	Scserbin_Zoltan/Ninja_Dash_42.gds \
	Scserbin_Zoltan/Ninja_Dash_43.gds \
	Scserbin_Zoltan/Ninja_Dash_44.gds \
	Scserbin_Zoltan/Ninja_Dash_45.gds \
	Scserbin_Zoltan/Ninja_Dash_46.gds \
	Scserbin_Zoltan/Ninja_Dash_47.gds \
	Scserbin_Zoltan/Ninja_Dash_48.gds \
	Scserbin_Zoltan/Ninja_Dash_49.gds \
	Scserbin_Zoltan/Ninja_Dash_50.gds \
	Scserbin_Zoltan/Ninja_Dash_51.gds \
	Scserbin_Zoltan/Ninja_Dash_52.gds \
	Scserbin_Zoltan/Ninja_Dash_53.gds \
	Scserbin_Zoltan/Ninja_Dash_54.gds \
	Scserbin_Zoltan/Ninja_Dash_55.gds \
	Scserbin_Zoltan/Ninja_Dash_56.gds \
	Scserbin_Zoltan/Ninja_Dash_57.gds \
	Scserbin_Zoltan/Ninja_Dash_58.gds \
	Scserbin_Zoltan/Ninja_Dash_59.gds \
	Scserbin_Zoltan/Ninja_Dash_60.gds \
	Scserbin_Zoltan/Ninja_Dash_61.gds \
	Scserbin_Zoltan/Ninja_Dash_62.gds \
	Scserbin_Zoltan/Ninja_Dash_63.gds \
	Scserbin_Zoltan/Ninja_Dash_64.gds \
	Scserbin_Zoltan/Ninja_Dash_65.gds
Scserbin_Zoltan_DATA = $(Scserbin_Zoltan_CAVES)
Sendydir = $(pkgdatadir)/caves/Sendy
Sendy_CAVES = Sendy/Crli_Caves.gds Sendy/Sendydash_1.bd Sendy/Sendydash_2.bd Sendy/Sendydash_3.gds
Sendy_DATA = $(Sendy_CAVES)
Skeletordir = $(pkgdatadir)/caves/Skeletor
Skeletor_CAVES = Skeletor/Mega_Boulderdash_1.gds Skeletor/Mega_Boulderdash_2.gds Skeletor/Mega_Boulderdash_3.gds Skeletor/Mega_Boulderdash_4.gds Skeletor/Mega_Boulderdash_5.gds Skeletor/Mega_Boulderdash_6.gds
Skeletor_DATA = $(Skeletor_CAVES)
Spiderdir = $(pkgdatadir)/caves/Spider
Spider_CAVES = Spider/Bouldi_Dash_1.gds Spider/Bouldi_Dash_10.gds Spider/Bouldi_Dash_2.gds Spider/Bouldi_Dash_3.gds Spider/Bouldi_Dash_4.gds Spider/Bouldi_Dash_5.gds Spider/Bouldi_Dash_6.gds Spider/Bouldi_Dash_7.gds Spider/Bouldi_Dash_8.gds Spider/Bouldi_Dash_9.gds Spider/Steel_Dash_1.gds Spider/Steel_Dash_2.gds
Spider_DATA = $(Spider_CAVES)
Stormbringerdir = $(pkgdatadir)/caves/Stormbringer
Stormbringer_CAVES = Stormbringer/Best_Of_Stormdash.gds Stormbringer/Crazy_Dash_1.gds Stormbringer/Crazy_Dash_2.gds Stormbringer/Crazy_Dash_3.gds Stormbringer/Crazy_Dash_4.gds Stormbringer/Crazy_Dash_5.gds Stormbringer/Crazy_Dash_6.gds Stormbringer/Crazy_Dash_7.gds Stormbringer/Stormdash_1.bd Stormbringer/Stormdash_2.bd Stormbringer/Stormdash_3.bd Stormbringer/Stormdash_4.bd Stormbringer/Stormdash_5.gds Stormbringer/Stormdash_6.bd Stormbringer/Stormdash_7.gds Stormbringer/Stormdash_8.gds
Stormbringer_DATA = $(Stormbringer_CAVES)
Sub7dir = $(pkgdatadir)/caves/Sub7
Sub7_CAVES = Sub7/Brutalo_Boulder_Dash.gds
Sub7_DATA = $(Sub7_CAVES)
Subotaidir = $(pkgdatadir)/caves/Subotai
Subotai_CAVES = Subotai/RichiDash01.bd Subotai/RichiDash02-The_Voodoo_Caves.bd
Subotai_DATA = $(Subotai_CAVES)
Super_boulderdir = $(pkgdatadir)/caves/Super_boulder
Super_boulder_CAVES = Super_boulder/Super_Boulder_01.gds Super_boulder/Super_Boulder_02.gds Super_boulder/Super_Boulder_03.gds Super_boulder/Super_Boulder_04.gds Super_boulder/Super_Boulder_05.gds Super_boulder/Super_Boulder_06.gds Super_boulder/Super_Boulder_07.gds Super_boulder/Super_Boulder_08.gds Super_boulder/Super_Boulder_09.gds Super_boulder/Super_Boulder_10.gds Super_boulder/Super_Boulder_11.gds
Super_boulder_DATA = $(Super_boulder_CAVES)
Tatter_Demaliondir = $(pkgdatadir)/caves/Tatter_Demalion
Tatter_Demalion_CAVES = Tatter_Demalion/Demalion_Dash_01-Can_you_dig_it_sucka.gds Tatter_Demalion/Demalion_Dash_02-Yosh.gds Tatter_Demalion/Demalion_Dash_02-Yosh_Casual_Remix.gds Tatter_Demalion/Demalion_Dash_03-Conflict_Diamonds.gds Tatter_Demalion/Demalion_Dash_04-All_aboard.gds Tatter_Demalion/Demalion_Dash_05-Farrago.gds Tatter_Demalion/Demalion_Dash_06-Seimicity.gds Tatter_Demalion/Demalion_Dash_07-Basic_Bricks.gds Tatter_Demalion/Demalion_Dash_08-Born2Dash.gds Tatter_Demalion/Demalion_Dash_09-Elianation.gds Tatter_Demalion/Demalion_Dash_10-Fun_and_Games.gds Tatter_Demalion/Demalion_Dash_11-ACME.gds Tatter_Demalion/Demalion_Dash_12-Super_Rad.gds Tatter_Demalion/Demalion_Dash_13-Paradigm.gds Tatter_Demalion/Demalion_Dash_14-All_aboard_again.gds Tatter_Demalion/Demalion_Dash_15-Commodork.gds Tatter_Demalion/Demalion_Dash_16-Craters.gds Tatter_Demalion/Demalion_Dash_17-Lords_of_the_Underground.gds Tatter_Demalion/Demalion_Dash_18-Grave_Robber.gds Tatter_Demalion/Demalion_Dash_NoFX.gds
Tatter_Demalion_DATA = $(Tatter_Demalion_CAVES)
The_Blockheadsdir = $(pkgdatadir)/caves/The_Blockheads
The_Blockheads_CAVES = The_Blockheads/AFL_Boulder_Dash.gds \
	The_Blockheads/Atlantis_Boulder.gds \
	The_Blockheads/Boulderdash_12.gds \
	The_Blockheads/Boulderdash_13.gds \
	The_Blockheads/Boulderdash_14.gds \
	The_Blockheads/Boulderdash_15.gds \
	The_Blockheads/Boulderdash_16.gds \
	The_Blockheads/Boulderdash_17.gds \
	The_Blockheads/Boulderdash_18.gds \
	The_Blockheads/Boulderdash_20.gds \
	The_Blockheads/Boulderdash_22.gds \
	The_Blockheads/Boulderdash_23.gds \
	The_Blockheads/Boulderdash_24.gds \
	The_Blockheads/Boulderdash_25.gds \
	The_Blockheads/Boulderdash_26.gds \
	The_Blockheads/Boulderdash_27.gds \
	The_Blockheads/Boulderdash_28.gds \
	The_Blockheads/Boulderdash_29.gds \
	The_Blockheads/Boulderdash_30.gds \
	The_Blockheads/Boulderdash_31.gds \
	The_Blockheads/Boulderdash_32.gds \
	The_Blockheads/Boulderdash_33.gds \
	The_Blockheads/Boulderdash_37.gds \
	The_Blockheads/Boulderdash_38.gds \
	The_Blockheads/Boulderdash_39.gds \
	The_Blockheads/Boulderdash_42.gds \
	The_Blockheads/Boulderdash_43.gds \
	The_Blockheads/Boulderdash_45.gds \
	The_Blockheads/Boulder_Head_1.gds \
	The_Blockheads/Boulder_Head_2.gds \
	The_Blockheads/Boulder_Head_3.gds \
	The_Blockheads/Boulder_Head_4.gds \
	The_Blockheads/Boulder_Head_5.gds \
	The_Blockheads/Boulder_Head_6.gds \
	The_Blockheads/Emerald_Dash_2.bd \
	The_Blockheads/NoPowerDash_3.bd \
	The_Blockheads/RCC_Boulder_Dash.gds \
	The_Blockheads/Waldwatzdash_3.bd
The_Blockheads_DATA = $(The_Blockheads_CAVES)
The_Bremer_Town_Musicusdir = $(pkgdatadir)/caves/The_Bremer_Town_Musicus
The_Bremer_Town_Musicus_CAVES = The_Bremer_Town_Musicus/Three_Boulder_Dash_Games_A.gds The_Bremer_Town_Musicus/Three_Boulder_Dash_Games_B.gds The_Bremer_Town_Musicus/Three_Boulder_Dash_Games_C.gds
The_Bremer_Town_Musicus_DATA = $(The_Bremer_Town_Musicus_CAVES)
The_Editordir = $(pkgdatadir)/caves/The_Editor
The_Editor_CAVES = The_Editor/Blunder_Bash.gds
The_Editor_DATA = $(The_Editor_CAVES)
The_Softkillerdir = $(pkgdatadir)/caves/The_Softkiller
The_Softkiller_CAVES = The_Softkiller/Bingo_1.gds The_Softkiller/Bingo_13.gds The_Softkiller/Bingo_2.gds The_Softkiller/Bingo_4.gds The_Softkiller/Bingo_6.gds The_Softkiller/Bingo_7.gds The_Softkiller/Boulder_Dash_13.bd The_Softkiller/Boulder_Dash_VII.gds The_Softkiller/Helena_1.gds The_Softkiller/Helena_2.gds The_Softkiller/Helena_3.gds The_Softkiller/Helena_4.gds The_Softkiller/Helena_5.gds The_Softkiller/Helena_6.gds
The_Softkiller_DATA = $(The_Softkiller_CAVES)
Thomas_Mauritzdir = $(pkgdatadir)/caves/Thomas_Mauritz
Thomas_Mauritz_CAVES = Thomas_Mauritz/Emerald_Dash_1.bd
Thomas_Mauritz_DATA = $(Thomas_Mauritz_CAVES)
Tropyxdir = $(pkgdatadir)/caves/Tropyx
Tropyx_CAVES = Tropyx/Boulder_Dash_12.gds Tropyx/Boulder_Dash_2000.gds Tropyx/Fantasy_Boulder_Dash_I.gds Tropyx/Power_Dash.gds Tropyx/Zulder_Dash.gds
Tropyx_DATA = $(Tropyx_CAVES)
UnlimitedStar23dir = $(pkgdatadir)/caves/UnlimitedStar23
UnlimitedStar23_CAVES = UnlimitedStar23/Boulderdash-ux-2.gds UnlimitedStar23/Boulderdash-ux-3.gds UnlimitedStar23/Boulderdash-ux.bd
UnlimitedStar23_DATA = $(UnlimitedStar23_CAVES)
variousdir = $(pkgdatadir)/caves/various
various_CAVES = various/Achim_Haertel.gds various/Arkanoid.gds various/Boulder_Dash_20_Atari.bd various/Boulder_Dash_3_Atari.gds various/Boulder_Dash_6_Padajici_Balvany.gds various/Boulder_Dash_8_Atari.gds various/Boulder_Dash_9_1.gds various/Boulder_Dash_9_2.gds various/Boulder_Dash_9_3.gds various/Boulder_Dash_9_4.gds various/Boulder_Dash_9_5.gds various/Boulder_Dash_9_6.gds various/Boulder_Dash_9_7.gds various/Boulder_Dash_9_8.gds various/Boulder_Dash_9_9.gds various/Boulder_Dash_Geil.gds various/Boulder_Dash_Jay.bd various/Boulder_Dash_Pro.gds various/Cash_Dash.gds various/LPS_GodsBoulder_1_2.gds various/Metsemakers_Dash_1.brc various/Polish_Boulderdash.gds various/Thomas_Boulder.gds various/Unknown_Boulderdash_12.gds various/Walace_Glazy_Atari.gds
various_DATA = $(various_CAVES)
Witrodir = $(pkgdatadir)/caves/Witro
Witro_CAVES = Witro/Witrodash_1.gds Witro/Witrodash_2.gds Witro/Witrodash_3.gds
Witro_DATA = $(Witro_CAVES)
EXTRA_DIST = create_makefile.sh $(Achim_Hofmann_CAVES) \
	$(Alan_Bond_CAVES) $(Alchemystics_CAVES) $(Alex_Zop_CAVES) \
	$(American_Action_CAVES) $(Arno_Weber_CAVES) \
	$(Atarakushi_CAVES) $(Bert_Bogger_CAVES) \
	$(Black_and_Hawk_CAVES) $(Blupi_CAVES) $(Bobosoft_CAVES) \
	$(Boulderwilli_CAVES) $(Boulder_Dash_Community_CAVES) \
	$(Boulder_Rush_cave_pack_CAVES) $(Burton_Bandit_CAVES) \
	$(CCF_CAVES) $(Chaos_CAVES) $(Cheech_Und_Chongs_CAVES) \
	$(Conrad_CAVES) $(CoolshakerUnionGangKG_CAVES) $(Cup_CAVES) \
	$(CWS_CAVES) $(Daniel_Tavernier_CAVES) $(Dan_Warren_CAVES) \
	$(Didi_CAVES) $(Dino_CAVES) $(Don_Pedro_CAVES) \
	$(Dotterteam_CAVES) $(Dr_Guru_CAVES) $(Dr_Watson_CAVES) \
	$(Dustin_Bachstein_CAVES) $(Eberhard_Baartz_CAVES) \
	$(Eclips_CAVES) $(El_Swingi_CAVES) $(FAJ_Soft_CAVES) \
	$(Falcon_Soft_CAVES) $(Firefox_CAVES) $(Frust_CAVES) \
	$(Gertrud_CAVES) $(Gert_van_den_Heuvel_CAVES) $(Gods_CAVES) \
	$(Grant_Walker_CAVES) $(Hacker_CAVES) \
	$(Heinz_Truepelmann_CAVES) $(HSG_CAVES) $(Iron_Soft_CAVES) \
	$(Karlchen_Opossum_CAVES) $(Lanzelott_and_Matula_CAVES) \
	$(Lord_Diego_CAVES) $(LTL_Soft_CAVES) $(Lukas_Shambis_CAVES) \
	$(Madgame_CAVES) $(Mapasoft_CAVES) $(Marek_Roth_CAVES) \
	$(Mario_Albrecht_CAVES) $(Matthias_Koth_CAVES) \
	$(Matthias_Steiner_CAVES) $(Max_CAVES) $(MB_Soft_CAVES) \
	$(Metalmorphosis_CAVES) $(Michael_and_Ingo_CAVES) \
	$(MJMan_CAVES) $(MJR_CAVES) $(MrJoker_CAVES) $(MrNobody_CAVES) \
	$(MrNonflex_CAVES) $(MrRockford_CAVES) $(NO1_CAVES) \
	$(NO1_delight_CAVES) $(NO1_prima_CAVES) $(Odo_CAVES) \
	$(Olaf_Roth_CAVES) $(Orion_CAVES) $(Papis_CAVES) \
	$(Persoft_CAVES) $(Pete_CAVES) $(Peter_Liepa_CAVES) \
	$(Peter_T_CAVES) $(Phoenix_CAVES) $(Pierre_and_Olivier_CAVES) \
	$(Posocopi_Waldkirch_CAVES) $(Profi_Boulder_disks_CAVES) \
	$(Prof_Knibble_CAVES) $(Renate_CAVES) $(Rolf_Lange_CAVES) \
	$(Rolf_Roth_CAVES) $(Ron_van_Schaik_CAVES) \
	$(Rory_Agsten_CAVES) $(Schlonkel_CAVES) \
	$(Scserbin_Zoltan_CAVES) $(Sendy_CAVES) $(Skeletor_CAVES) \
	$(Spider_CAVES) $(Stormbringer_CAVES) $(Sub7_CAVES) \
	$(Subotai_CAVES) $(Super_boulder_CAVES) \
	$(Tatter_Demalion_CAVES) $(The_Blockheads_CAVES) \
	$(The_Bremer_Town_Musicus_CAVES) $(The_Editor_CAVES) \
	$(The_Softkiller_CAVES) $(Thomas_Mauritz_CAVES) \
	$(Tropyx_CAVES) $(UnlimitedStar23_CAVES) $(various_CAVES) \
	$(Witro_CAVES)
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu caves/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu caves/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-Achim_HofmannDATA: $(Achim_Hofmann_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Achim_Hofmann_DATA)'; test -n "$(Achim_Hofmanndir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Achim_Hofmanndir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Achim_Hofmanndir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Achim_Hofmanndir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Achim_Hofmanndir)" || exit $$?; \
	done

uninstall-Achim_HofmannDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Achim_Hofmann_DATA)'; test -n "$(Achim_Hofmanndir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Achim_Hofmanndir)'; $(am__uninstall_files_from_dir)
install-Alan_BondDATA: $(Alan_Bond_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Alan_Bond_DATA)'; test -n "$(Alan_Bonddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Alan_Bonddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Alan_Bonddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Alan_Bonddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Alan_Bonddir)" || exit $$?; \
	done

uninstall-Alan_BondDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Alan_Bond_DATA)'; test -n "$(Alan_Bonddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Alan_Bonddir)'; $(am__uninstall_files_from_dir)
install-AlchemysticsDATA: $(Alchemystics_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Alchemystics_DATA)'; test -n "$(Alchemysticsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Alchemysticsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Alchemysticsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Alchemysticsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Alchemysticsdir)" || exit $$?; \
	done

uninstall-AlchemysticsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Alchemystics_DATA)'; test -n "$(Alchemysticsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Alchemysticsdir)'; $(am__uninstall_files_from_dir)
install-Alex_ZopDATA: $(Alex_Zop_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Alex_Zop_DATA)'; test -n "$(Alex_Zopdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Alex_Zopdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Alex_Zopdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Alex_Zopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Alex_Zopdir)" || exit $$?; \
	done

uninstall-Alex_ZopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Alex_Zop_DATA)'; test -n "$(Alex_Zopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Alex_Zopdir)'; $(am__uninstall_files_from_dir)
install-American_ActionDATA: $(American_Action_DATA)
	@$(NORMAL_INSTALL)
	@list='$(American_Action_DATA)'; test -n "$(American_Actiondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(American_Actiondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(American_Actiondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(American_Actiondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(American_Actiondir)" || exit $$?; \
	done

uninstall-American_ActionDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(American_Action_DATA)'; test -n "$(American_Actiondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(American_Actiondir)'; $(am__uninstall_files_from_dir)
install-Arno_WeberDATA: $(Arno_Weber_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Arno_Weber_DATA)'; test -n "$(Arno_Weberdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Arno_Weberdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Arno_Weberdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Arno_Weberdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Arno_Weberdir)" || exit $$?; \
	done

uninstall-Arno_WeberDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Arno_Weber_DATA)'; test -n "$(Arno_Weberdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Arno_Weberdir)'; $(am__uninstall_files_from_dir)
install-AtarakushiDATA: $(Atarakushi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Atarakushi_DATA)'; test -n "$(Atarakushidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Atarakushidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Atarakushidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Atarakushidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Atarakushidir)" || exit $$?; \
	done

uninstall-AtarakushiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Atarakushi_DATA)'; test -n "$(Atarakushidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Atarakushidir)'; $(am__uninstall_files_from_dir)
install-Bert_BoggerDATA: $(Bert_Bogger_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Bert_Bogger_DATA)'; test -n "$(Bert_Boggerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Bert_Boggerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Bert_Boggerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Bert_Boggerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Bert_Boggerdir)" || exit $$?; \
	done

uninstall-Bert_BoggerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Bert_Bogger_DATA)'; test -n "$(Bert_Boggerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Bert_Boggerdir)'; $(am__uninstall_files_from_dir)
install-Black_and_HawkDATA: $(Black_and_Hawk_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Black_and_Hawk_DATA)'; test -n "$(Black_and_Hawkdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Black_and_Hawkdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Black_and_Hawkdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Black_and_Hawkdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Black_and_Hawkdir)" || exit $$?; \
	done

uninstall-Black_and_HawkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Black_and_Hawk_DATA)'; test -n "$(Black_and_Hawkdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Black_and_Hawkdir)'; $(am__uninstall_files_from_dir)
install-BlupiDATA: $(Blupi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Blupi_DATA)'; test -n "$(Blupidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Blupidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Blupidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Blupidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Blupidir)" || exit $$?; \
	done

uninstall-BlupiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Blupi_DATA)'; test -n "$(Blupidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Blupidir)'; $(am__uninstall_files_from_dir)
install-BobosoftDATA: $(Bobosoft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Bobosoft_DATA)'; test -n "$(Bobosoftdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Bobosoftdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Bobosoftdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Bobosoftdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Bobosoftdir)" || exit $$?; \
	done

uninstall-BobosoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Bobosoft_DATA)'; test -n "$(Bobosoftdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Bobosoftdir)'; $(am__uninstall_files_from_dir)
install-Boulder_Dash_CommunityDATA: $(Boulder_Dash_Community_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Boulder_Dash_Community_DATA)'; test -n "$(Boulder_Dash_Communitydir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Boulder_Dash_Communitydir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Boulder_Dash_Communitydir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Boulder_Dash_Communitydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Boulder_Dash_Communitydir)" || exit $$?; \
	done

uninstall-Boulder_Dash_CommunityDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Boulder_Dash_Community_DATA)'; test -n "$(Boulder_Dash_Communitydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Boulder_Dash_Communitydir)'; $(am__uninstall_files_from_dir)
install-Boulder_Rush_cave_packDATA: $(Boulder_Rush_cave_pack_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Boulder_Rush_cave_pack_DATA)'; test -n "$(Boulder_Rush_cave_packdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Boulder_Rush_cave_packdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Boulder_Rush_cave_packdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Boulder_Rush_cave_packdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Boulder_Rush_cave_packdir)" || exit $$?; \
	done

uninstall-Boulder_Rush_cave_packDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Boulder_Rush_cave_pack_DATA)'; test -n "$(Boulder_Rush_cave_packdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Boulder_Rush_cave_packdir)'; $(am__uninstall_files_from_dir)
install-BoulderwilliDATA: $(Boulderwilli_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Boulderwilli_DATA)'; test -n "$(Boulderwillidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Boulderwillidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Boulderwillidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Boulderwillidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Boulderwillidir)" || exit $$?; \
	done

uninstall-BoulderwilliDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Boulderwilli_DATA)'; test -n "$(Boulderwillidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Boulderwillidir)'; $(am__uninstall_files_from_dir)
install-Burton_BanditDATA: $(Burton_Bandit_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Burton_Bandit_DATA)'; test -n "$(Burton_Banditdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Burton_Banditdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Burton_Banditdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Burton_Banditdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Burton_Banditdir)" || exit $$?; \
	done

uninstall-Burton_BanditDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Burton_Bandit_DATA)'; test -n "$(Burton_Banditdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Burton_Banditdir)'; $(am__uninstall_files_from_dir)
install-CCFDATA: $(CCF_DATA)
	@$(NORMAL_INSTALL)
	@list='$(CCF_DATA)'; test -n "$(CCFdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(CCFdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(CCFdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(CCFdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(CCFdir)" || exit $$?; \
	done

uninstall-CCFDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(CCF_DATA)'; test -n "$(CCFdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(CCFdir)'; $(am__uninstall_files_from_dir)
install-CWSDATA: $(CWS_DATA)
	@$(NORMAL_INSTALL)
	@list='$(CWS_DATA)'; test -n "$(CWSdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(CWSdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(CWSdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(CWSdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(CWSdir)" || exit $$?; \
	done

uninstall-CWSDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(CWS_DATA)'; test -n "$(CWSdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(CWSdir)'; $(am__uninstall_files_from_dir)
install-ChaosDATA: $(Chaos_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Chaos_DATA)'; test -n "$(Chaosdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Chaosdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Chaosdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Chaosdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Chaosdir)" || exit $$?; \
	done

uninstall-ChaosDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Chaos_DATA)'; test -n "$(Chaosdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Chaosdir)'; $(am__uninstall_files_from_dir)
install-Cheech_Und_ChongsDATA: $(Cheech_Und_Chongs_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Cheech_Und_Chongs_DATA)'; test -n "$(Cheech_Und_Chongsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Cheech_Und_Chongsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Cheech_Und_Chongsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Cheech_Und_Chongsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Cheech_Und_Chongsdir)" || exit $$?; \
	done

uninstall-Cheech_Und_ChongsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Cheech_Und_Chongs_DATA)'; test -n "$(Cheech_Und_Chongsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Cheech_Und_Chongsdir)'; $(am__uninstall_files_from_dir)
install-ConradDATA: $(Conrad_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Conrad_DATA)'; test -n "$(Conraddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Conraddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Conraddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Conraddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Conraddir)" || exit $$?; \
	done

uninstall-ConradDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Conrad_DATA)'; test -n "$(Conraddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Conraddir)'; $(am__uninstall_files_from_dir)
install-CoolshakerUnionGangKGDATA: $(CoolshakerUnionGangKG_DATA)
	@$(NORMAL_INSTALL)
	@list='$(CoolshakerUnionGangKG_DATA)'; test -n "$(CoolshakerUnionGangKGdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(CoolshakerUnionGangKGdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(CoolshakerUnionGangKGdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(CoolshakerUnionGangKGdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(CoolshakerUnionGangKGdir)" || exit $$?; \
	done

uninstall-CoolshakerUnionGangKGDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(CoolshakerUnionGangKG_DATA)'; test -n "$(CoolshakerUnionGangKGdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(CoolshakerUnionGangKGdir)'; $(am__uninstall_files_from_dir)
install-CupDATA: $(Cup_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Cup_DATA)'; test -n "$(Cupdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Cupdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Cupdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Cupdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Cupdir)" || exit $$?; \
	done

uninstall-CupDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Cup_DATA)'; test -n "$(Cupdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Cupdir)'; $(am__uninstall_files_from_dir)
install-Dan_WarrenDATA: $(Dan_Warren_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dan_Warren_DATA)'; test -n "$(Dan_Warrendir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dan_Warrendir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dan_Warrendir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dan_Warrendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dan_Warrendir)" || exit $$?; \
	done

uninstall-Dan_WarrenDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dan_Warren_DATA)'; test -n "$(Dan_Warrendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dan_Warrendir)'; $(am__uninstall_files_from_dir)
install-Daniel_TavernierDATA: $(Daniel_Tavernier_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Daniel_Tavernier_DATA)'; test -n "$(Daniel_Tavernierdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Daniel_Tavernierdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Daniel_Tavernierdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Daniel_Tavernierdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Daniel_Tavernierdir)" || exit $$?; \
	done

uninstall-Daniel_TavernierDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Daniel_Tavernier_DATA)'; test -n "$(Daniel_Tavernierdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Daniel_Tavernierdir)'; $(am__uninstall_files_from_dir)
install-DidiDATA: $(Didi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Didi_DATA)'; test -n "$(Dididir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dididir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dididir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dididir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dididir)" || exit $$?; \
	done

uninstall-DidiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Didi_DATA)'; test -n "$(Dididir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dididir)'; $(am__uninstall_files_from_dir)
install-DinoDATA: $(Dino_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dino_DATA)'; test -n "$(Dinodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dinodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dinodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dinodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dinodir)" || exit $$?; \
	done

uninstall-DinoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dino_DATA)'; test -n "$(Dinodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dinodir)'; $(am__uninstall_files_from_dir)
install-Don_PedroDATA: $(Don_Pedro_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Don_Pedro_DATA)'; test -n "$(Don_Pedrodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Don_Pedrodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Don_Pedrodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Don_Pedrodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Don_Pedrodir)" || exit $$?; \
	done

uninstall-Don_PedroDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Don_Pedro_DATA)'; test -n "$(Don_Pedrodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Don_Pedrodir)'; $(am__uninstall_files_from_dir)
install-DotterteamDATA: $(Dotterteam_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dotterteam_DATA)'; test -n "$(Dotterteamdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dotterteamdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dotterteamdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dotterteamdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dotterteamdir)" || exit $$?; \
	done

uninstall-DotterteamDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dotterteam_DATA)'; test -n "$(Dotterteamdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dotterteamdir)'; $(am__uninstall_files_from_dir)
install-Dr_GuruDATA: $(Dr_Guru_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dr_Guru_DATA)'; test -n "$(Dr_Gurudir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dr_Gurudir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dr_Gurudir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dr_Gurudir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dr_Gurudir)" || exit $$?; \
	done

uninstall-Dr_GuruDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dr_Guru_DATA)'; test -n "$(Dr_Gurudir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dr_Gurudir)'; $(am__uninstall_files_from_dir)
install-Dr_WatsonDATA: $(Dr_Watson_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dr_Watson_DATA)'; test -n "$(Dr_Watsondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dr_Watsondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dr_Watsondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dr_Watsondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dr_Watsondir)" || exit $$?; \
	done

uninstall-Dr_WatsonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dr_Watson_DATA)'; test -n "$(Dr_Watsondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dr_Watsondir)'; $(am__uninstall_files_from_dir)
install-Dustin_BachsteinDATA: $(Dustin_Bachstein_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Dustin_Bachstein_DATA)'; test -n "$(Dustin_Bachsteindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Dustin_Bachsteindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Dustin_Bachsteindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Dustin_Bachsteindir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Dustin_Bachsteindir)" || exit $$?; \
	done

uninstall-Dustin_BachsteinDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Dustin_Bachstein_DATA)'; test -n "$(Dustin_Bachsteindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Dustin_Bachsteindir)'; $(am__uninstall_files_from_dir)
install-Eberhard_BaartzDATA: $(Eberhard_Baartz_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Eberhard_Baartz_DATA)'; test -n "$(Eberhard_Baartzdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Eberhard_Baartzdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Eberhard_Baartzdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Eberhard_Baartzdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Eberhard_Baartzdir)" || exit $$?; \
	done

uninstall-Eberhard_BaartzDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Eberhard_Baartz_DATA)'; test -n "$(Eberhard_Baartzdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Eberhard_Baartzdir)'; $(am__uninstall_files_from_dir)
install-EclipsDATA: $(Eclips_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Eclips_DATA)'; test -n "$(Eclipsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Eclipsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Eclipsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Eclipsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Eclipsdir)" || exit $$?; \
	done

uninstall-EclipsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Eclips_DATA)'; test -n "$(Eclipsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Eclipsdir)'; $(am__uninstall_files_from_dir)
install-El_SwingiDATA: $(El_Swingi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(El_Swingi_DATA)'; test -n "$(El_Swingidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(El_Swingidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(El_Swingidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(El_Swingidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(El_Swingidir)" || exit $$?; \
	done

uninstall-El_SwingiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(El_Swingi_DATA)'; test -n "$(El_Swingidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(El_Swingidir)'; $(am__uninstall_files_from_dir)
install-FAJ_SoftDATA: $(FAJ_Soft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(FAJ_Soft_DATA)'; test -n "$(FAJ_Softdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(FAJ_Softdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(FAJ_Softdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(FAJ_Softdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(FAJ_Softdir)" || exit $$?; \
	done

uninstall-FAJ_SoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(FAJ_Soft_DATA)'; test -n "$(FAJ_Softdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(FAJ_Softdir)'; $(am__uninstall_files_from_dir)
install-Falcon_SoftDATA: $(Falcon_Soft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Falcon_Soft_DATA)'; test -n "$(Falcon_Softdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Falcon_Softdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Falcon_Softdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Falcon_Softdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Falcon_Softdir)" || exit $$?; \
	done

uninstall-Falcon_SoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Falcon_Soft_DATA)'; test -n "$(Falcon_Softdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Falcon_Softdir)'; $(am__uninstall_files_from_dir)
install-FirefoxDATA: $(Firefox_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Firefox_DATA)'; test -n "$(Firefoxdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Firefoxdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Firefoxdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Firefoxdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Firefoxdir)" || exit $$?; \
	done

uninstall-FirefoxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Firefox_DATA)'; test -n "$(Firefoxdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Firefoxdir)'; $(am__uninstall_files_from_dir)
install-FrustDATA: $(Frust_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Frust_DATA)'; test -n "$(Frustdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Frustdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Frustdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Frustdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Frustdir)" || exit $$?; \
	done

uninstall-FrustDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Frust_DATA)'; test -n "$(Frustdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Frustdir)'; $(am__uninstall_files_from_dir)
install-Gert_van_den_HeuvelDATA: $(Gert_van_den_Heuvel_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Gert_van_den_Heuvel_DATA)'; test -n "$(Gert_van_den_Heuveldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Gert_van_den_Heuveldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Gert_van_den_Heuveldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Gert_van_den_Heuveldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Gert_van_den_Heuveldir)" || exit $$?; \
	done

uninstall-Gert_van_den_HeuvelDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Gert_van_den_Heuvel_DATA)'; test -n "$(Gert_van_den_Heuveldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Gert_van_den_Heuveldir)'; $(am__uninstall_files_from_dir)
install-GertrudDATA: $(Gertrud_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Gertrud_DATA)'; test -n "$(Gertruddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Gertruddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Gertruddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Gertruddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Gertruddir)" || exit $$?; \
	done

uninstall-GertrudDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Gertrud_DATA)'; test -n "$(Gertruddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Gertruddir)'; $(am__uninstall_files_from_dir)
install-GodsDATA: $(Gods_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Gods_DATA)'; test -n "$(Godsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Godsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Godsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Godsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Godsdir)" || exit $$?; \
	done

uninstall-GodsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Gods_DATA)'; test -n "$(Godsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Godsdir)'; $(am__uninstall_files_from_dir)
install-Grant_WalkerDATA: $(Grant_Walker_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Grant_Walker_DATA)'; test -n "$(Grant_Walkerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Grant_Walkerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Grant_Walkerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Grant_Walkerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Grant_Walkerdir)" || exit $$?; \
	done

uninstall-Grant_WalkerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Grant_Walker_DATA)'; test -n "$(Grant_Walkerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Grant_Walkerdir)'; $(am__uninstall_files_from_dir)
install-HSGDATA: $(HSG_DATA)
	@$(NORMAL_INSTALL)
	@list='$(HSG_DATA)'; test -n "$(HSGdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(HSGdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(HSGdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(HSGdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(HSGdir)" || exit $$?; \
	done

uninstall-HSGDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(HSG_DATA)'; test -n "$(HSGdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(HSGdir)'; $(am__uninstall_files_from_dir)
install-HackerDATA: $(Hacker_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Hacker_DATA)'; test -n "$(Hackerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Hackerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Hackerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Hackerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Hackerdir)" || exit $$?; \
	done

uninstall-HackerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Hacker_DATA)'; test -n "$(Hackerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Hackerdir)'; $(am__uninstall_files_from_dir)
install-Heinz_TruepelmannDATA: $(Heinz_Truepelmann_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Heinz_Truepelmann_DATA)'; test -n "$(Heinz_Truepelmanndir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Heinz_Truepelmanndir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Heinz_Truepelmanndir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Heinz_Truepelmanndir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Heinz_Truepelmanndir)" || exit $$?; \
	done

uninstall-Heinz_TruepelmannDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Heinz_Truepelmann_DATA)'; test -n "$(Heinz_Truepelmanndir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Heinz_Truepelmanndir)'; $(am__uninstall_files_from_dir)
install-Iron_SoftDATA: $(Iron_Soft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Iron_Soft_DATA)'; test -n "$(Iron_Softdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Iron_Softdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Iron_Softdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Iron_Softdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Iron_Softdir)" || exit $$?; \
	done

uninstall-Iron_SoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Iron_Soft_DATA)'; test -n "$(Iron_Softdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Iron_Softdir)'; $(am__uninstall_files_from_dir)
install-Karlchen_OpossumDATA: $(Karlchen_Opossum_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Karlchen_Opossum_DATA)'; test -n "$(Karlchen_Opossumdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Karlchen_Opossumdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Karlchen_Opossumdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Karlchen_Opossumdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Karlchen_Opossumdir)" || exit $$?; \
	done

uninstall-Karlchen_OpossumDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Karlchen_Opossum_DATA)'; test -n "$(Karlchen_Opossumdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Karlchen_Opossumdir)'; $(am__uninstall_files_from_dir)
install-LTL_SoftDATA: $(LTL_Soft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(LTL_Soft_DATA)'; test -n "$(LTL_Softdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(LTL_Softdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(LTL_Softdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(LTL_Softdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(LTL_Softdir)" || exit $$?; \
	done

uninstall-LTL_SoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(LTL_Soft_DATA)'; test -n "$(LTL_Softdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(LTL_Softdir)'; $(am__uninstall_files_from_dir)
install-Lanzelott_and_MatulaDATA: $(Lanzelott_and_Matula_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Lanzelott_and_Matula_DATA)'; test -n "$(Lanzelott_and_Matuladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Lanzelott_and_Matuladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Lanzelott_and_Matuladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Lanzelott_and_Matuladir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Lanzelott_and_Matuladir)" || exit $$?; \
	done

uninstall-Lanzelott_and_MatulaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Lanzelott_and_Matula_DATA)'; test -n "$(Lanzelott_and_Matuladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Lanzelott_and_Matuladir)'; $(am__uninstall_files_from_dir)
install-Lord_DiegoDATA: $(Lord_Diego_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Lord_Diego_DATA)'; test -n "$(Lord_Diegodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Lord_Diegodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Lord_Diegodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Lord_Diegodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Lord_Diegodir)" || exit $$?; \
	done

uninstall-Lord_DiegoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Lord_Diego_DATA)'; test -n "$(Lord_Diegodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Lord_Diegodir)'; $(am__uninstall_files_from_dir)
install-Lukas_ShambisDATA: $(Lukas_Shambis_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Lukas_Shambis_DATA)'; test -n "$(Lukas_Shambisdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Lukas_Shambisdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Lukas_Shambisdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Lukas_Shambisdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Lukas_Shambisdir)" || exit $$?; \
	done

uninstall-Lukas_ShambisDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Lukas_Shambis_DATA)'; test -n "$(Lukas_Shambisdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Lukas_Shambisdir)'; $(am__uninstall_files_from_dir)
install-MB_SoftDATA: $(MB_Soft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MB_Soft_DATA)'; test -n "$(MB_Softdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MB_Softdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MB_Softdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MB_Softdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MB_Softdir)" || exit $$?; \
	done

uninstall-MB_SoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MB_Soft_DATA)'; test -n "$(MB_Softdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MB_Softdir)'; $(am__uninstall_files_from_dir)
install-MJManDATA: $(MJMan_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MJMan_DATA)'; test -n "$(MJMandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MJMandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MJMandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MJMandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MJMandir)" || exit $$?; \
	done

uninstall-MJManDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MJMan_DATA)'; test -n "$(MJMandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MJMandir)'; $(am__uninstall_files_from_dir)
install-MJRDATA: $(MJR_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MJR_DATA)'; test -n "$(MJRdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MJRdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MJRdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MJRdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MJRdir)" || exit $$?; \
	done

uninstall-MJRDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MJR_DATA)'; test -n "$(MJRdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MJRdir)'; $(am__uninstall_files_from_dir)
install-MadgameDATA: $(Madgame_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Madgame_DATA)'; test -n "$(Madgamedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Madgamedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Madgamedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Madgamedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Madgamedir)" || exit $$?; \
	done

uninstall-MadgameDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Madgame_DATA)'; test -n "$(Madgamedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Madgamedir)'; $(am__uninstall_files_from_dir)
install-MapasoftDATA: $(Mapasoft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Mapasoft_DATA)'; test -n "$(Mapasoftdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Mapasoftdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Mapasoftdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Mapasoftdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Mapasoftdir)" || exit $$?; \
	done

uninstall-MapasoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Mapasoft_DATA)'; test -n "$(Mapasoftdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Mapasoftdir)'; $(am__uninstall_files_from_dir)
install-Marek_RothDATA: $(Marek_Roth_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Marek_Roth_DATA)'; test -n "$(Marek_Rothdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Marek_Rothdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Marek_Rothdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Marek_Rothdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Marek_Rothdir)" || exit $$?; \
	done

uninstall-Marek_RothDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Marek_Roth_DATA)'; test -n "$(Marek_Rothdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Marek_Rothdir)'; $(am__uninstall_files_from_dir)
install-Mario_AlbrechtDATA: $(Mario_Albrecht_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Mario_Albrecht_DATA)'; test -n "$(Mario_Albrechtdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Mario_Albrechtdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Mario_Albrechtdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Mario_Albrechtdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Mario_Albrechtdir)" || exit $$?; \
	done

uninstall-Mario_AlbrechtDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Mario_Albrecht_DATA)'; test -n "$(Mario_Albrechtdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Mario_Albrechtdir)'; $(am__uninstall_files_from_dir)
install-Matthias_KothDATA: $(Matthias_Koth_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Matthias_Koth_DATA)'; test -n "$(Matthias_Kothdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Matthias_Kothdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Matthias_Kothdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Matthias_Kothdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Matthias_Kothdir)" || exit $$?; \
	done

uninstall-Matthias_KothDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Matthias_Koth_DATA)'; test -n "$(Matthias_Kothdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Matthias_Kothdir)'; $(am__uninstall_files_from_dir)
install-Matthias_SteinerDATA: $(Matthias_Steiner_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Matthias_Steiner_DATA)'; test -n "$(Matthias_Steinerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Matthias_Steinerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Matthias_Steinerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Matthias_Steinerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Matthias_Steinerdir)" || exit $$?; \
	done

uninstall-Matthias_SteinerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Matthias_Steiner_DATA)'; test -n "$(Matthias_Steinerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Matthias_Steinerdir)'; $(am__uninstall_files_from_dir)
install-MaxDATA: $(Max_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Max_DATA)'; test -n "$(Maxdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Maxdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Maxdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Maxdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Maxdir)" || exit $$?; \
	done

uninstall-MaxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Max_DATA)'; test -n "$(Maxdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Maxdir)'; $(am__uninstall_files_from_dir)
install-MetalmorphosisDATA: $(Metalmorphosis_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Metalmorphosis_DATA)'; test -n "$(Metalmorphosisdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Metalmorphosisdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Metalmorphosisdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Metalmorphosisdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Metalmorphosisdir)" || exit $$?; \
	done

uninstall-MetalmorphosisDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Metalmorphosis_DATA)'; test -n "$(Metalmorphosisdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Metalmorphosisdir)'; $(am__uninstall_files_from_dir)
install-Michael_and_IngoDATA: $(Michael_and_Ingo_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Michael_and_Ingo_DATA)'; test -n "$(Michael_and_Ingodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Michael_and_Ingodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Michael_and_Ingodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Michael_and_Ingodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Michael_and_Ingodir)" || exit $$?; \
	done

uninstall-Michael_and_IngoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Michael_and_Ingo_DATA)'; test -n "$(Michael_and_Ingodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Michael_and_Ingodir)'; $(am__uninstall_files_from_dir)
install-MrJokerDATA: $(MrJoker_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MrJoker_DATA)'; test -n "$(MrJokerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MrJokerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MrJokerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MrJokerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MrJokerdir)" || exit $$?; \
	done

uninstall-MrJokerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MrJoker_DATA)'; test -n "$(MrJokerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MrJokerdir)'; $(am__uninstall_files_from_dir)
install-MrNobodyDATA: $(MrNobody_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MrNobody_DATA)'; test -n "$(MrNobodydir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MrNobodydir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MrNobodydir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MrNobodydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MrNobodydir)" || exit $$?; \
	done

uninstall-MrNobodyDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MrNobody_DATA)'; test -n "$(MrNobodydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MrNobodydir)'; $(am__uninstall_files_from_dir)
install-MrNonflexDATA: $(MrNonflex_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MrNonflex_DATA)'; test -n "$(MrNonflexdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MrNonflexdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MrNonflexdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MrNonflexdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MrNonflexdir)" || exit $$?; \
	done

uninstall-MrNonflexDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MrNonflex_DATA)'; test -n "$(MrNonflexdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MrNonflexdir)'; $(am__uninstall_files_from_dir)
install-MrRockfordDATA: $(MrRockford_DATA)
	@$(NORMAL_INSTALL)
	@list='$(MrRockford_DATA)'; test -n "$(MrRockforddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(MrRockforddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(MrRockforddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(MrRockforddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(MrRockforddir)" || exit $$?; \
	done

uninstall-MrRockfordDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(MrRockford_DATA)'; test -n "$(MrRockforddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(MrRockforddir)'; $(am__uninstall_files_from_dir)
install-NO1DATA: $(NO1_DATA)
	@$(NORMAL_INSTALL)
	@list='$(NO1_DATA)'; test -n "$(NO1dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(NO1dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(NO1dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(NO1dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(NO1dir)" || exit $$?; \
	done

uninstall-NO1DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(NO1_DATA)'; test -n "$(NO1dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(NO1dir)'; $(am__uninstall_files_from_dir)
install-NO1_delightDATA: $(NO1_delight_DATA)
	@$(NORMAL_INSTALL)
	@list='$(NO1_delight_DATA)'; test -n "$(NO1_delightdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(NO1_delightdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(NO1_delightdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(NO1_delightdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(NO1_delightdir)" || exit $$?; \
	done

uninstall-NO1_delightDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(NO1_delight_DATA)'; test -n "$(NO1_delightdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(NO1_delightdir)'; $(am__uninstall_files_from_dir)
install-NO1_primaDATA: $(NO1_prima_DATA)
	@$(NORMAL_INSTALL)
	@list='$(NO1_prima_DATA)'; test -n "$(NO1_primadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(NO1_primadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(NO1_primadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(NO1_primadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(NO1_primadir)" || exit $$?; \
	done

uninstall-NO1_primaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(NO1_prima_DATA)'; test -n "$(NO1_primadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(NO1_primadir)'; $(am__uninstall_files_from_dir)
install-OdoDATA: $(Odo_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Odo_DATA)'; test -n "$(Ododir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Ododir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Ododir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Ododir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Ododir)" || exit $$?; \
	done

uninstall-OdoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Odo_DATA)'; test -n "$(Ododir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Ododir)'; $(am__uninstall_files_from_dir)
install-Olaf_RothDATA: $(Olaf_Roth_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Olaf_Roth_DATA)'; test -n "$(Olaf_Rothdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Olaf_Rothdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Olaf_Rothdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Olaf_Rothdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Olaf_Rothdir)" || exit $$?; \
	done

uninstall-Olaf_RothDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Olaf_Roth_DATA)'; test -n "$(Olaf_Rothdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Olaf_Rothdir)'; $(am__uninstall_files_from_dir)
install-OrionDATA: $(Orion_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Orion_DATA)'; test -n "$(Oriondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Oriondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Oriondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Oriondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Oriondir)" || exit $$?; \
	done

uninstall-OrionDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Orion_DATA)'; test -n "$(Oriondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Oriondir)'; $(am__uninstall_files_from_dir)
install-PapisDATA: $(Papis_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Papis_DATA)'; test -n "$(Papisdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Papisdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Papisdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Papisdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Papisdir)" || exit $$?; \
	done

uninstall-PapisDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Papis_DATA)'; test -n "$(Papisdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Papisdir)'; $(am__uninstall_files_from_dir)
install-PersoftDATA: $(Persoft_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Persoft_DATA)'; test -n "$(Persoftdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Persoftdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Persoftdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Persoftdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Persoftdir)" || exit $$?; \
	done

uninstall-PersoftDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Persoft_DATA)'; test -n "$(Persoftdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Persoftdir)'; $(am__uninstall_files_from_dir)
install-PeteDATA: $(Pete_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Pete_DATA)'; test -n "$(Petedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Petedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Petedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Petedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Petedir)" || exit $$?; \
	done

uninstall-PeteDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Pete_DATA)'; test -n "$(Petedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Petedir)'; $(am__uninstall_files_from_dir)
install-Peter_LiepaDATA: $(Peter_Liepa_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Peter_Liepa_DATA)'; test -n "$(Peter_Liepadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Peter_Liepadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Peter_Liepadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Peter_Liepadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Peter_Liepadir)" || exit $$?; \
	done

uninstall-Peter_LiepaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Peter_Liepa_DATA)'; test -n "$(Peter_Liepadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Peter_Liepadir)'; $(am__uninstall_files_from_dir)
install-Peter_TDATA: $(Peter_T_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Peter_T_DATA)'; test -n "$(Peter_Tdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Peter_Tdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Peter_Tdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Peter_Tdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Peter_Tdir)" || exit $$?; \
	done

uninstall-Peter_TDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Peter_T_DATA)'; test -n "$(Peter_Tdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Peter_Tdir)'; $(am__uninstall_files_from_dir)
install-PhoenixDATA: $(Phoenix_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Phoenix_DATA)'; test -n "$(Phoenixdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Phoenixdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Phoenixdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Phoenixdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Phoenixdir)" || exit $$?; \
	done

uninstall-PhoenixDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Phoenix_DATA)'; test -n "$(Phoenixdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Phoenixdir)'; $(am__uninstall_files_from_dir)
install-Pierre_and_OlivierDATA: $(Pierre_and_Olivier_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Pierre_and_Olivier_DATA)'; test -n "$(Pierre_and_Olivierdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Pierre_and_Olivierdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Pierre_and_Olivierdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Pierre_and_Olivierdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Pierre_and_Olivierdir)" || exit $$?; \
	done

uninstall-Pierre_and_OlivierDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Pierre_and_Olivier_DATA)'; test -n "$(Pierre_and_Olivierdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Pierre_and_Olivierdir)'; $(am__uninstall_files_from_dir)
install-Posocopi_WaldkirchDATA: $(Posocopi_Waldkirch_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Posocopi_Waldkirch_DATA)'; test -n "$(Posocopi_Waldkirchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Posocopi_Waldkirchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Posocopi_Waldkirchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Posocopi_Waldkirchdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Posocopi_Waldkirchdir)" || exit $$?; \
	done

uninstall-Posocopi_WaldkirchDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Posocopi_Waldkirch_DATA)'; test -n "$(Posocopi_Waldkirchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Posocopi_Waldkirchdir)'; $(am__uninstall_files_from_dir)
install-Prof_KnibbleDATA: $(Prof_Knibble_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Prof_Knibble_DATA)'; test -n "$(Prof_Knibbledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Prof_Knibbledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Prof_Knibbledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Prof_Knibbledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Prof_Knibbledir)" || exit $$?; \
	done

uninstall-Prof_KnibbleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Prof_Knibble_DATA)'; test -n "$(Prof_Knibbledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Prof_Knibbledir)'; $(am__uninstall_files_from_dir)
install-Profi_Boulder_disksDATA: $(Profi_Boulder_disks_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Profi_Boulder_disks_DATA)'; test -n "$(Profi_Boulder_disksdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Profi_Boulder_disksdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Profi_Boulder_disksdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Profi_Boulder_disksdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Profi_Boulder_disksdir)" || exit $$?; \
	done

uninstall-Profi_Boulder_disksDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Profi_Boulder_disks_DATA)'; test -n "$(Profi_Boulder_disksdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Profi_Boulder_disksdir)'; $(am__uninstall_files_from_dir)
install-RenateDATA: $(Renate_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Renate_DATA)'; test -n "$(Renatedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Renatedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Renatedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Renatedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Renatedir)" || exit $$?; \
	done

uninstall-RenateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Renate_DATA)'; test -n "$(Renatedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Renatedir)'; $(am__uninstall_files_from_dir)
install-Rolf_LangeDATA: $(Rolf_Lange_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Rolf_Lange_DATA)'; test -n "$(Rolf_Langedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Rolf_Langedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Rolf_Langedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Rolf_Langedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Rolf_Langedir)" || exit $$?; \
	done

uninstall-Rolf_LangeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Rolf_Lange_DATA)'; test -n "$(Rolf_Langedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Rolf_Langedir)'; $(am__uninstall_files_from_dir)
install-Rolf_RothDATA: $(Rolf_Roth_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Rolf_Roth_DATA)'; test -n "$(Rolf_Rothdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Rolf_Rothdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Rolf_Rothdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Rolf_Rothdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Rolf_Rothdir)" || exit $$?; \
	done

uninstall-Rolf_RothDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Rolf_Roth_DATA)'; test -n "$(Rolf_Rothdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Rolf_Rothdir)'; $(am__uninstall_files_from_dir)
install-Ron_van_SchaikDATA: $(Ron_van_Schaik_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Ron_van_Schaik_DATA)'; test -n "$(Ron_van_Schaikdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Ron_van_Schaikdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Ron_van_Schaikdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Ron_van_Schaikdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Ron_van_Schaikdir)" || exit $$?; \
	done

uninstall-Ron_van_SchaikDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Ron_van_Schaik_DATA)'; test -n "$(Ron_van_Schaikdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Ron_van_Schaikdir)'; $(am__uninstall_files_from_dir)
install-Rory_AgstenDATA: $(Rory_Agsten_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Rory_Agsten_DATA)'; test -n "$(Rory_Agstendir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Rory_Agstendir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Rory_Agstendir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Rory_Agstendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Rory_Agstendir)" || exit $$?; \
	done

uninstall-Rory_AgstenDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Rory_Agsten_DATA)'; test -n "$(Rory_Agstendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Rory_Agstendir)'; $(am__uninstall_files_from_dir)
install-SchlonkelDATA: $(Schlonkel_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Schlonkel_DATA)'; test -n "$(Schlonkeldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Schlonkeldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Schlonkeldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Schlonkeldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Schlonkeldir)" || exit $$?; \
	done

uninstall-SchlonkelDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Schlonkel_DATA)'; test -n "$(Schlonkeldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Schlonkeldir)'; $(am__uninstall_files_from_dir)
install-Scserbin_ZoltanDATA: $(Scserbin_Zoltan_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Scserbin_Zoltan_DATA)'; test -n "$(Scserbin_Zoltandir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Scserbin_Zoltandir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Scserbin_Zoltandir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Scserbin_Zoltandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Scserbin_Zoltandir)" || exit $$?; \
	done

uninstall-Scserbin_ZoltanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Scserbin_Zoltan_DATA)'; test -n "$(Scserbin_Zoltandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Scserbin_Zoltandir)'; $(am__uninstall_files_from_dir)
install-SendyDATA: $(Sendy_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Sendy_DATA)'; test -n "$(Sendydir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Sendydir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Sendydir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Sendydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Sendydir)" || exit $$?; \
	done

uninstall-SendyDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Sendy_DATA)'; test -n "$(Sendydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Sendydir)'; $(am__uninstall_files_from_dir)
install-SkeletorDATA: $(Skeletor_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Skeletor_DATA)'; test -n "$(Skeletordir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Skeletordir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Skeletordir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Skeletordir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Skeletordir)" || exit $$?; \
	done

uninstall-SkeletorDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Skeletor_DATA)'; test -n "$(Skeletordir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Skeletordir)'; $(am__uninstall_files_from_dir)
install-SpiderDATA: $(Spider_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Spider_DATA)'; test -n "$(Spiderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Spiderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Spiderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Spiderdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Spiderdir)" || exit $$?; \
	done

uninstall-SpiderDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Spider_DATA)'; test -n "$(Spiderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Spiderdir)'; $(am__uninstall_files_from_dir)
install-StormbringerDATA: $(Stormbringer_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Stormbringer_DATA)'; test -n "$(Stormbringerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Stormbringerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Stormbringerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Stormbringerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Stormbringerdir)" || exit $$?; \
	done

uninstall-StormbringerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Stormbringer_DATA)'; test -n "$(Stormbringerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Stormbringerdir)'; $(am__uninstall_files_from_dir)
install-Sub7DATA: $(Sub7_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Sub7_DATA)'; test -n "$(Sub7dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Sub7dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Sub7dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Sub7dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Sub7dir)" || exit $$?; \
	done

uninstall-Sub7DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Sub7_DATA)'; test -n "$(Sub7dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Sub7dir)'; $(am__uninstall_files_from_dir)
install-SubotaiDATA: $(Subotai_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Subotai_DATA)'; test -n "$(Subotaidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Subotaidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Subotaidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Subotaidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Subotaidir)" || exit $$?; \
	done

uninstall-SubotaiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Subotai_DATA)'; test -n "$(Subotaidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Subotaidir)'; $(am__uninstall_files_from_dir)
install-Super_boulderDATA: $(Super_boulder_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Super_boulder_DATA)'; test -n "$(Super_boulderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Super_boulderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Super_boulderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Super_boulderdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Super_boulderdir)" || exit $$?; \
	done

uninstall-Super_boulderDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Super_boulder_DATA)'; test -n "$(Super_boulderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Super_boulderdir)'; $(am__uninstall_files_from_dir)
install-Tatter_DemalionDATA: $(Tatter_Demalion_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Tatter_Demalion_DATA)'; test -n "$(Tatter_Demaliondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Tatter_Demaliondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Tatter_Demaliondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Tatter_Demaliondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Tatter_Demaliondir)" || exit $$?; \
	done

uninstall-Tatter_DemalionDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Tatter_Demalion_DATA)'; test -n "$(Tatter_Demaliondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Tatter_Demaliondir)'; $(am__uninstall_files_from_dir)
install-The_BlockheadsDATA: $(The_Blockheads_DATA)
	@$(NORMAL_INSTALL)
	@list='$(The_Blockheads_DATA)'; test -n "$(The_Blockheadsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(The_Blockheadsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(The_Blockheadsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(The_Blockheadsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(The_Blockheadsdir)" || exit $$?; \
	done

uninstall-The_BlockheadsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(The_Blockheads_DATA)'; test -n "$(The_Blockheadsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(The_Blockheadsdir)'; $(am__uninstall_files_from_dir)
install-The_Bremer_Town_MusicusDATA: $(The_Bremer_Town_Musicus_DATA)
	@$(NORMAL_INSTALL)
	@list='$(The_Bremer_Town_Musicus_DATA)'; test -n "$(The_Bremer_Town_Musicusdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(The_Bremer_Town_Musicusdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(The_Bremer_Town_Musicusdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(The_Bremer_Town_Musicusdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(The_Bremer_Town_Musicusdir)" || exit $$?; \
	done

uninstall-The_Bremer_Town_MusicusDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(The_Bremer_Town_Musicus_DATA)'; test -n "$(The_Bremer_Town_Musicusdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(The_Bremer_Town_Musicusdir)'; $(am__uninstall_files_from_dir)
install-The_EditorDATA: $(The_Editor_DATA)
	@$(NORMAL_INSTALL)
	@list='$(The_Editor_DATA)'; test -n "$(The_Editordir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(The_Editordir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(The_Editordir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(The_Editordir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(The_Editordir)" || exit $$?; \
	done

uninstall-The_EditorDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(The_Editor_DATA)'; test -n "$(The_Editordir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(The_Editordir)'; $(am__uninstall_files_from_dir)
install-The_SoftkillerDATA: $(The_Softkiller_DATA)
	@$(NORMAL_INSTALL)
	@list='$(The_Softkiller_DATA)'; test -n "$(The_Softkillerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(The_Softkillerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(The_Softkillerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(The_Softkillerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(The_Softkillerdir)" || exit $$?; \
	done

uninstall-The_SoftkillerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(The_Softkiller_DATA)'; test -n "$(The_Softkillerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(The_Softkillerdir)'; $(am__uninstall_files_from_dir)
install-Thomas_MauritzDATA: $(Thomas_Mauritz_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Thomas_Mauritz_DATA)'; test -n "$(Thomas_Mauritzdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Thomas_Mauritzdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Thomas_Mauritzdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Thomas_Mauritzdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Thomas_Mauritzdir)" || exit $$?; \
	done

uninstall-Thomas_MauritzDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Thomas_Mauritz_DATA)'; test -n "$(Thomas_Mauritzdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Thomas_Mauritzdir)'; $(am__uninstall_files_from_dir)
install-TropyxDATA: $(Tropyx_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Tropyx_DATA)'; test -n "$(Tropyxdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Tropyxdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Tropyxdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Tropyxdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Tropyxdir)" || exit $$?; \
	done

uninstall-TropyxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Tropyx_DATA)'; test -n "$(Tropyxdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Tropyxdir)'; $(am__uninstall_files_from_dir)
install-UnlimitedStar23DATA: $(UnlimitedStar23_DATA)
	@$(NORMAL_INSTALL)
	@list='$(UnlimitedStar23_DATA)'; test -n "$(UnlimitedStar23dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(UnlimitedStar23dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(UnlimitedStar23dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(UnlimitedStar23dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(UnlimitedStar23dir)" || exit $$?; \
	done

uninstall-UnlimitedStar23DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(UnlimitedStar23_DATA)'; test -n "$(UnlimitedStar23dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(UnlimitedStar23dir)'; $(am__uninstall_files_from_dir)
install-WitroDATA: $(Witro_DATA)
	@$(NORMAL_INSTALL)
	@list='$(Witro_DATA)'; test -n "$(Witrodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Witrodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Witrodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Witrodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Witrodir)" || exit $$?; \
	done

uninstall-WitroDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Witro_DATA)'; test -n "$(Witrodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(Witrodir)'; $(am__uninstall_files_from_dir)
install-variousDATA: $(various_DATA)
	@$(NORMAL_INSTALL)
	@list='$(various_DATA)'; test -n "$(variousdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(variousdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(variousdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(variousdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(variousdir)" || exit $$?; \
	done

uninstall-variousDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(various_DATA)'; test -n "$(variousdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(variousdir)'; $(am__uninstall_files_from_dir)
tags TAGS:

ctags CTAGS:

cscope cscopelist:

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(Achim_Hofmanndir)" "$(DESTDIR)$(Alan_Bonddir)" "$(DESTDIR)$(Alchemysticsdir)" "$(DESTDIR)$(Alex_Zopdir)" "$(DESTDIR)$(American_Actiondir)" "$(DESTDIR)$(Arno_Weberdir)" "$(DESTDIR)$(Atarakushidir)" "$(DESTDIR)$(Bert_Boggerdir)" "$(DESTDIR)$(Black_and_Hawkdir)" "$(DESTDIR)$(Blupidir)" "$(DESTDIR)$(Bobosoftdir)" "$(DESTDIR)$(Boulder_Dash_Communitydir)" "$(DESTDIR)$(Boulder_Rush_cave_packdir)" "$(DESTDIR)$(Boulderwillidir)" "$(DESTDIR)$(Burton_Banditdir)" "$(DESTDIR)$(CCFdir)" "$(DESTDIR)$(CWSdir)" "$(DESTDIR)$(Chaosdir)" "$(DESTDIR)$(Cheech_Und_Chongsdir)" "$(DESTDIR)$(Conraddir)" "$(DESTDIR)$(CoolshakerUnionGangKGdir)" "$(DESTDIR)$(Cupdir)" "$(DESTDIR)$(Dan_Warrendir)" "$(DESTDIR)$(Daniel_Tavernierdir)" "$(DESTDIR)$(Dididir)" "$(DESTDIR)$(Dinodir)" "$(DESTDIR)$(Don_Pedrodir)" "$(DESTDIR)$(Dotterteamdir)" "$(DESTDIR)$(Dr_Gurudir)" "$(DESTDIR)$(Dr_Watsondir)" "$(DESTDIR)$(Dustin_Bachsteindir)" "$(DESTDIR)$(Eberhard_Baartzdir)" "$(DESTDIR)$(Eclipsdir)" "$(DESTDIR)$(El_Swingidir)" "$(DESTDIR)$(FAJ_Softdir)" "$(DESTDIR)$(Falcon_Softdir)" "$(DESTDIR)$(Firefoxdir)" "$(DESTDIR)$(Frustdir)" "$(DESTDIR)$(Gert_van_den_Heuveldir)" "$(DESTDIR)$(Gertruddir)" "$(DESTDIR)$(Godsdir)" "$(DESTDIR)$(Grant_Walkerdir)" "$(DESTDIR)$(HSGdir)" "$(DESTDIR)$(Hackerdir)" "$(DESTDIR)$(Heinz_Truepelmanndir)" "$(DESTDIR)$(Iron_Softdir)" "$(DESTDIR)$(Karlchen_Opossumdir)" "$(DESTDIR)$(LTL_Softdir)" "$(DESTDIR)$(Lanzelott_and_Matuladir)" "$(DESTDIR)$(Lord_Diegodir)" "$(DESTDIR)$(Lukas_Shambisdir)" "$(DESTDIR)$(MB_Softdir)" "$(DESTDIR)$(MJMandir)" "$(DESTDIR)$(MJRdir)" "$(DESTDIR)$(Madgamedir)" "$(DESTDIR)$(Mapasoftdir)" "$(DESTDIR)$(Marek_Rothdir)" "$(DESTDIR)$(Mario_Albrechtdir)" "$(DESTDIR)$(Matthias_Kothdir)" "$(DESTDIR)$(Matthias_Steinerdir)" "$(DESTDIR)$(Maxdir)" "$(DESTDIR)$(Metalmorphosisdir)" "$(DESTDIR)$(Michael_and_Ingodir)" "$(DESTDIR)$(MrJokerdir)" "$(DESTDIR)$(MrNobodydir)" "$(DESTDIR)$(MrNonflexdir)" "$(DESTDIR)$(MrRockforddir)" "$(DESTDIR)$(NO1dir)" "$(DESTDIR)$(NO1_delightdir)" "$(DESTDIR)$(NO1_primadir)" "$(DESTDIR)$(Ododir)" "$(DESTDIR)$(Olaf_Rothdir)" "$(DESTDIR)$(Oriondir)" "$(DESTDIR)$(Papisdir)" "$(DESTDIR)$(Persoftdir)" "$(DESTDIR)$(Petedir)" "$(DESTDIR)$(Peter_Liepadir)" "$(DESTDIR)$(Peter_Tdir)" "$(DESTDIR)$(Phoenixdir)" "$(DESTDIR)$(Pierre_and_Olivierdir)" "$(DESTDIR)$(Posocopi_Waldkirchdir)" "$(DESTDIR)$(Prof_Knibbledir)" "$(DESTDIR)$(Profi_Boulder_disksdir)" "$(DESTDIR)$(Renatedir)" "$(DESTDIR)$(Rolf_Langedir)" "$(DESTDIR)$(Rolf_Rothdir)" "$(DESTDIR)$(Ron_van_Schaikdir)" "$(DESTDIR)$(Rory_Agstendir)" "$(DESTDIR)$(Schlonkeldir)" "$(DESTDIR)$(Scserbin_Zoltandir)" "$(DESTDIR)$(Sendydir)" "$(DESTDIR)$(Skeletordir)" "$(DESTDIR)$(Spiderdir)" "$(DESTDIR)$(Stormbringerdir)" "$(DESTDIR)$(Sub7dir)" "$(DESTDIR)$(Subotaidir)" "$(DESTDIR)$(Super_boulderdir)" "$(DESTDIR)$(Tatter_Demaliondir)" "$(DESTDIR)$(The_Blockheadsdir)" "$(DESTDIR)$(The_Bremer_Town_Musicusdir)" "$(DESTDIR)$(The_Editordir)" "$(DESTDIR)$(The_Softkillerdir)" "$(DESTDIR)$(Thomas_Mauritzdir)" "$(DESTDIR)$(Tropyxdir)" "$(DESTDIR)$(UnlimitedStar23dir)" "$(DESTDIR)$(Witrodir)" "$(DESTDIR)$(variousdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-Achim_HofmannDATA install-Alan_BondDATA \
	install-AlchemysticsDATA install-Alex_ZopDATA \
	install-American_ActionDATA install-Arno_WeberDATA \
	install-AtarakushiDATA install-Bert_BoggerDATA \
	install-Black_and_HawkDATA install-BlupiDATA \
	install-BobosoftDATA install-Boulder_Dash_CommunityDATA \
	install-Boulder_Rush_cave_packDATA install-BoulderwilliDATA \
	install-Burton_BanditDATA install-CCFDATA install-CWSDATA \
	install-ChaosDATA install-Cheech_Und_ChongsDATA \
	install-ConradDATA install-CoolshakerUnionGangKGDATA \
	install-CupDATA install-Dan_WarrenDATA \
	install-Daniel_TavernierDATA install-DidiDATA install-DinoDATA \
	install-Don_PedroDATA install-DotterteamDATA \
	install-Dr_GuruDATA install-Dr_WatsonDATA \
	install-Dustin_BachsteinDATA install-Eberhard_BaartzDATA \
	install-EclipsDATA install-El_SwingiDATA install-FAJ_SoftDATA \
	install-Falcon_SoftDATA install-FirefoxDATA install-FrustDATA \
	install-Gert_van_den_HeuvelDATA install-GertrudDATA \
	install-GodsDATA install-Grant_WalkerDATA install-HSGDATA \
	install-HackerDATA install-Heinz_TruepelmannDATA \
	install-Iron_SoftDATA install-Karlchen_OpossumDATA \
	install-LTL_SoftDATA install-Lanzelott_and_MatulaDATA \
	install-Lord_DiegoDATA install-Lukas_ShambisDATA \
	install-MB_SoftDATA install-MJManDATA install-MJRDATA \
	install-MadgameDATA install-MapasoftDATA \
	install-Marek_RothDATA install-Mario_AlbrechtDATA \
	install-Matthias_KothDATA install-Matthias_SteinerDATA \
	install-MaxDATA install-MetalmorphosisDATA \
	install-Michael_and_IngoDATA install-MrJokerDATA \
	install-MrNobodyDATA install-MrNonflexDATA \
	install-MrRockfordDATA install-NO1DATA install-NO1_delightDATA \
	install-NO1_primaDATA install-OdoDATA install-Olaf_RothDATA \
	install-OrionDATA install-PapisDATA install-PersoftDATA \
	install-PeteDATA install-Peter_LiepaDATA install-Peter_TDATA \
	install-PhoenixDATA install-Pierre_and_OlivierDATA \
	install-Posocopi_WaldkirchDATA install-Prof_KnibbleDATA \
	install-Profi_Boulder_disksDATA install-RenateDATA \
	install-Rolf_LangeDATA install-Rolf_RothDATA \
	install-Ron_van_SchaikDATA install-Rory_AgstenDATA \
	install-SchlonkelDATA install-Scserbin_ZoltanDATA \
	install-SendyDATA install-SkeletorDATA install-SpiderDATA \
	install-StormbringerDATA install-Sub7DATA install-SubotaiDATA \
	install-Super_boulderDATA install-Tatter_DemalionDATA \
	install-The_BlockheadsDATA install-The_Bremer_Town_MusicusDATA \
	install-The_EditorDATA install-The_SoftkillerDATA \
	install-Thomas_MauritzDATA install-TropyxDATA \
	install-UnlimitedStar23DATA install-WitroDATA \
	install-variousDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-Achim_HofmannDATA uninstall-Alan_BondDATA \
	uninstall-AlchemysticsDATA uninstall-Alex_ZopDATA \
	uninstall-American_ActionDATA uninstall-Arno_WeberDATA \
	uninstall-AtarakushiDATA uninstall-Bert_BoggerDATA \
	uninstall-Black_and_HawkDATA uninstall-BlupiDATA \
	uninstall-BobosoftDATA uninstall-Boulder_Dash_CommunityDATA \
	uninstall-Boulder_Rush_cave_packDATA \
	uninstall-BoulderwilliDATA uninstall-Burton_BanditDATA \
	uninstall-CCFDATA uninstall-CWSDATA uninstall-ChaosDATA \
	uninstall-Cheech_Und_ChongsDATA uninstall-ConradDATA \
	uninstall-CoolshakerUnionGangKGDATA uninstall-CupDATA \
	uninstall-Dan_WarrenDATA uninstall-Daniel_TavernierDATA \
	uninstall-DidiDATA uninstall-DinoDATA uninstall-Don_PedroDATA \
	uninstall-DotterteamDATA uninstall-Dr_GuruDATA \
	uninstall-Dr_WatsonDATA uninstall-Dustin_BachsteinDATA \
	uninstall-Eberhard_BaartzDATA uninstall-EclipsDATA \
	uninstall-El_SwingiDATA uninstall-FAJ_SoftDATA \
	uninstall-Falcon_SoftDATA uninstall-FirefoxDATA \
	uninstall-FrustDATA uninstall-Gert_van_den_HeuvelDATA \
	uninstall-GertrudDATA uninstall-GodsDATA \
	uninstall-Grant_WalkerDATA uninstall-HSGDATA \
	uninstall-HackerDATA uninstall-Heinz_TruepelmannDATA \
	uninstall-Iron_SoftDATA uninstall-Karlchen_OpossumDATA \
	uninstall-LTL_SoftDATA uninstall-Lanzelott_and_MatulaDATA \
	uninstall-Lord_DiegoDATA uninstall-Lukas_ShambisDATA \
	uninstall-MB_SoftDATA uninstall-MJManDATA uninstall-MJRDATA \
	uninstall-MadgameDATA uninstall-MapasoftDATA \
	uninstall-Marek_RothDATA uninstall-Mario_AlbrechtDATA \
	uninstall-Matthias_KothDATA uninstall-Matthias_SteinerDATA \
	uninstall-MaxDATA uninstall-MetalmorphosisDATA \
	uninstall-Michael_and_IngoDATA uninstall-MrJokerDATA \
	uninstall-MrNobodyDATA uninstall-MrNonflexDATA \
	uninstall-MrRockfordDATA uninstall-NO1DATA \
	uninstall-NO1_delightDATA uninstall-NO1_primaDATA \
	uninstall-OdoDATA uninstall-Olaf_RothDATA uninstall-OrionDATA \
	uninstall-PapisDATA uninstall-PersoftDATA uninstall-PeteDATA \
	uninstall-Peter_LiepaDATA uninstall-Peter_TDATA \
	uninstall-PhoenixDATA uninstall-Pierre_and_OlivierDATA \
	uninstall-Posocopi_WaldkirchDATA uninstall-Prof_KnibbleDATA \
	uninstall-Profi_Boulder_disksDATA uninstall-RenateDATA \
	uninstall-Rolf_LangeDATA uninstall-Rolf_RothDATA \
	uninstall-Ron_van_SchaikDATA uninstall-Rory_AgstenDATA \
	uninstall-SchlonkelDATA uninstall-Scserbin_ZoltanDATA \
	uninstall-SendyDATA uninstall-SkeletorDATA \
	uninstall-SpiderDATA uninstall-StormbringerDATA \
	uninstall-Sub7DATA uninstall-SubotaiDATA \
	uninstall-Super_boulderDATA uninstall-Tatter_DemalionDATA \
	uninstall-The_BlockheadsDATA \
	uninstall-The_Bremer_Town_MusicusDATA uninstall-The_EditorDATA \
	uninstall-The_SoftkillerDATA uninstall-Thomas_MauritzDATA \
	uninstall-TropyxDATA uninstall-UnlimitedStar23DATA \
	uninstall-WitroDATA uninstall-variousDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic cscopelist-am \
	ctags-am distclean distclean-generic distdir dvi dvi-am html \
	html-am info info-am install install-Achim_HofmannDATA \
	install-Alan_BondDATA install-AlchemysticsDATA \
	install-Alex_ZopDATA install-American_ActionDATA \
	install-Arno_WeberDATA install-AtarakushiDATA \
	install-Bert_BoggerDATA install-Black_and_HawkDATA \
	install-BlupiDATA install-BobosoftDATA \
	install-Boulder_Dash_CommunityDATA \
	install-Boulder_Rush_cave_packDATA install-BoulderwilliDATA \
	install-Burton_BanditDATA install-CCFDATA install-CWSDATA \
	install-ChaosDATA install-Cheech_Und_ChongsDATA \
	install-ConradDATA install-CoolshakerUnionGangKGDATA \
	install-CupDATA install-Dan_WarrenDATA \
	install-Daniel_TavernierDATA install-DidiDATA install-DinoDATA \
	install-Don_PedroDATA install-DotterteamDATA \
	install-Dr_GuruDATA install-Dr_WatsonDATA \
	install-Dustin_BachsteinDATA install-Eberhard_BaartzDATA \
	install-EclipsDATA install-El_SwingiDATA install-FAJ_SoftDATA \
	install-Falcon_SoftDATA install-FirefoxDATA install-FrustDATA \
	install-Gert_van_den_HeuvelDATA install-GertrudDATA \
	install-GodsDATA install-Grant_WalkerDATA install-HSGDATA \
	install-HackerDATA install-Heinz_TruepelmannDATA \
	install-Iron_SoftDATA install-Karlchen_OpossumDATA \
	install-LTL_SoftDATA install-Lanzelott_and_MatulaDATA \
	install-Lord_DiegoDATA install-Lukas_ShambisDATA \
	install-MB_SoftDATA install-MJManDATA install-MJRDATA \
	install-MadgameDATA install-MapasoftDATA \
	install-Marek_RothDATA install-Mario_AlbrechtDATA \
	install-Matthias_KothDATA install-Matthias_SteinerDATA \
	install-MaxDATA install-MetalmorphosisDATA \
	install-Michael_and_IngoDATA install-MrJokerDATA \
	install-MrNobodyDATA install-MrNonflexDATA \
	install-MrRockfordDATA install-NO1DATA install-NO1_delightDATA \
	install-NO1_primaDATA install-OdoDATA install-Olaf_RothDATA \
	install-OrionDATA install-PapisDATA install-PersoftDATA \
	install-PeteDATA install-Peter_LiepaDATA install-Peter_TDATA \
	install-PhoenixDATA install-Pierre_and_OlivierDATA \
	install-Posocopi_WaldkirchDATA install-Prof_KnibbleDATA \
	install-Profi_Boulder_disksDATA install-RenateDATA \
	install-Rolf_LangeDATA install-Rolf_RothDATA \
	install-Ron_van_SchaikDATA install-Rory_AgstenDATA \
	install-SchlonkelDATA install-Scserbin_ZoltanDATA \
	install-SendyDATA install-SkeletorDATA install-SpiderDATA \
	install-StormbringerDATA install-Sub7DATA install-SubotaiDATA \
	install-Super_boulderDATA install-Tatter_DemalionDATA \
	install-The_BlockheadsDATA install-The_Bremer_Town_MusicusDATA \
	install-The_EditorDATA install-The_SoftkillerDATA \
	install-Thomas_MauritzDATA install-TropyxDATA \
	install-UnlimitedStar23DATA install-WitroDATA install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-variousDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am tags-am uninstall \
	uninstall-Achim_HofmannDATA uninstall-Alan_BondDATA \
	uninstall-AlchemysticsDATA uninstall-Alex_ZopDATA \
	uninstall-American_ActionDATA uninstall-Arno_WeberDATA \
	uninstall-AtarakushiDATA uninstall-Bert_BoggerDATA \
	uninstall-Black_and_HawkDATA uninstall-BlupiDATA \
	uninstall-BobosoftDATA uninstall-Boulder_Dash_CommunityDATA \
	uninstall-Boulder_Rush_cave_packDATA \
	uninstall-BoulderwilliDATA uninstall-Burton_BanditDATA \
	uninstall-CCFDATA uninstall-CWSDATA uninstall-ChaosDATA \
	uninstall-Cheech_Und_ChongsDATA uninstall-ConradDATA \
	uninstall-CoolshakerUnionGangKGDATA uninstall-CupDATA \
	uninstall-Dan_WarrenDATA uninstall-Daniel_TavernierDATA \
	uninstall-DidiDATA uninstall-DinoDATA uninstall-Don_PedroDATA \
	uninstall-DotterteamDATA uninstall-Dr_GuruDATA \
	uninstall-Dr_WatsonDATA uninstall-Dustin_BachsteinDATA \
	uninstall-Eberhard_BaartzDATA uninstall-EclipsDATA \
	uninstall-El_SwingiDATA uninstall-FAJ_SoftDATA \
	uninstall-Falcon_SoftDATA uninstall-FirefoxDATA \
	uninstall-FrustDATA uninstall-Gert_van_den_HeuvelDATA \
	uninstall-GertrudDATA uninstall-GodsDATA \
	uninstall-Grant_WalkerDATA uninstall-HSGDATA \
	uninstall-HackerDATA uninstall-Heinz_TruepelmannDATA \
	uninstall-Iron_SoftDATA uninstall-Karlchen_OpossumDATA \
	uninstall-LTL_SoftDATA uninstall-Lanzelott_and_MatulaDATA \
	uninstall-Lord_DiegoDATA uninstall-Lukas_ShambisDATA \
	uninstall-MB_SoftDATA uninstall-MJManDATA uninstall-MJRDATA \
	uninstall-MadgameDATA uninstall-MapasoftDATA \
	uninstall-Marek_RothDATA uninstall-Mario_AlbrechtDATA \
	uninstall-Matthias_KothDATA uninstall-Matthias_SteinerDATA \
	uninstall-MaxDATA uninstall-MetalmorphosisDATA \
	uninstall-Michael_and_IngoDATA uninstall-MrJokerDATA \
	uninstall-MrNobodyDATA uninstall-MrNonflexDATA \
	uninstall-MrRockfordDATA uninstall-NO1DATA \
	uninstall-NO1_delightDATA uninstall-NO1_primaDATA \
	uninstall-OdoDATA uninstall-Olaf_RothDATA uninstall-OrionDATA \
	uninstall-PapisDATA uninstall-PersoftDATA uninstall-PeteDATA \
	uninstall-Peter_LiepaDATA uninstall-Peter_TDATA \
	uninstall-PhoenixDATA uninstall-Pierre_and_OlivierDATA \
	uninstall-Posocopi_WaldkirchDATA uninstall-Prof_KnibbleDATA \
	uninstall-Profi_Boulder_disksDATA uninstall-RenateDATA \
	uninstall-Rolf_LangeDATA uninstall-Rolf_RothDATA \
	uninstall-Ron_van_SchaikDATA uninstall-Rory_AgstenDATA \
	uninstall-SchlonkelDATA uninstall-Scserbin_ZoltanDATA \
	uninstall-SendyDATA uninstall-SkeletorDATA \
	uninstall-SpiderDATA uninstall-StormbringerDATA \
	uninstall-Sub7DATA uninstall-SubotaiDATA \
	uninstall-Super_boulderDATA uninstall-Tatter_DemalionDATA \
	uninstall-The_BlockheadsDATA \
	uninstall-The_Bremer_Town_MusicusDATA uninstall-The_EditorDATA \
	uninstall-The_SoftkillerDATA uninstall-Thomas_MauritzDATA \
	uninstall-TropyxDATA uninstall-UnlimitedStar23DATA \
	uninstall-WitroDATA uninstall-am uninstall-variousDATA

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
